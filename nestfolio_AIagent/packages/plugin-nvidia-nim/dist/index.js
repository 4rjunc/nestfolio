import w from'chalk';import rs from'cli-table3';import Gn from'ora';import {elizaLogger}from'@elizaos/core';import _n from'openai';import lt from'axios';import b from'fs';import T from'path';import Ht from'process';var S;(function(s){s.assertEqual=r=>r;function e(r){}s.assertIs=e;function t(r){throw new Error}s.assertNever=t,s.arrayToEnum=r=>{let a={};for(let i of r)a[i]=i;return a},s.getValidEnumValues=r=>{let a=s.objectKeys(r).filter(o=>typeof r[r[o]]!="number"),i={};for(let o of a)i[o]=r[o];return s.objectValues(i)},s.objectValues=r=>s.objectKeys(r).map(function(a){return r[a]}),s.objectKeys=typeof Object.keys=="function"?r=>Object.keys(r):r=>{let a=[];for(let i in r)Object.prototype.hasOwnProperty.call(r,i)&&a.push(i);return a},s.find=(r,a)=>{for(let i of r)if(a(i))return i},s.isInteger=typeof Number.isInteger=="function"?r=>Number.isInteger(r):r=>typeof r=="number"&&isFinite(r)&&Math.floor(r)===r;function n(r,a=" | "){return r.map(i=>typeof i=="string"?`'${i}'`:i).join(a)}s.joinValues=n,s.jsonStringifyReplacer=(r,a)=>typeof a=="bigint"?a.toString():a;})(S||(S={}));var pt;(function(s){s.mergeShapes=(e,t)=>({...e,...t});})(pt||(pt={}));var m=S.arrayToEnum(["string","nan","number","integer","float","boolean","date","bigint","symbol","function","undefined","null","array","object","unknown","promise","void","never","map","set"]),ae=s=>{switch(typeof s){case "undefined":return m.undefined;case "string":return m.string;case "number":return isNaN(s)?m.nan:m.number;case "boolean":return m.boolean;case "function":return m.function;case "bigint":return m.bigint;case "symbol":return m.symbol;case "object":return Array.isArray(s)?m.array:s===null?m.null:s.then&&typeof s.then=="function"&&s.catch&&typeof s.catch=="function"?m.promise:typeof Map<"u"&&s instanceof Map?m.map:typeof Set<"u"&&s instanceof Set?m.set:typeof Date<"u"&&s instanceof Date?m.date:m.object;default:return m.unknown}},u=S.arrayToEnum(["invalid_type","invalid_literal","custom","invalid_union","invalid_union_discriminator","invalid_enum_value","unrecognized_keys","invalid_arguments","invalid_return_type","invalid_date","invalid_string","too_small","too_big","invalid_intersection_types","not_multiple_of","not_finite"]),is=s=>JSON.stringify(s,null,2).replace(/"([^"]+)":/g,"$1:"),z=class s extends Error{get errors(){return this.issues}constructor(e){super(),this.issues=[],this.addIssue=n=>{this.issues=[...this.issues,n];},this.addIssues=(n=[])=>{this.issues=[...this.issues,...n];};let t=new.target.prototype;Object.setPrototypeOf?Object.setPrototypeOf(this,t):this.__proto__=t,this.name="ZodError",this.issues=e;}format(e){let t=e||function(a){return a.message},n={_errors:[]},r=a=>{for(let i of a.issues)if(i.code==="invalid_union")i.unionErrors.map(r);else if(i.code==="invalid_return_type")r(i.returnTypeError);else if(i.code==="invalid_arguments")r(i.argumentsError);else if(i.path.length===0)n._errors.push(t(i));else {let o=n,l=0;for(;l<i.path.length;){let c=i.path[l];l===i.path.length-1?(o[c]=o[c]||{_errors:[]},o[c]._errors.push(t(i))):o[c]=o[c]||{_errors:[]},o=o[c],l++;}}};return r(this),n}static assert(e){if(!(e instanceof s))throw new Error(`Not a ZodError: ${e}`)}toString(){return this.message}get message(){return JSON.stringify(this.issues,S.jsonStringifyReplacer,2)}get isEmpty(){return this.issues.length===0}flatten(e=t=>t.message){let t={},n=[];for(let r of this.issues)r.path.length>0?(t[r.path[0]]=t[r.path[0]]||[],t[r.path[0]].push(e(r))):n.push(e(r));return {formErrors:n,fieldErrors:t}}get formErrors(){return this.flatten()}};z.create=s=>new z(s);var Ge=(s,e)=>{let t;switch(s.code){case u.invalid_type:s.received===m.undefined?t="Required":t=`Expected ${s.expected}, received ${s.received}`;break;case u.invalid_literal:t=`Invalid literal value, expected ${JSON.stringify(s.expected,S.jsonStringifyReplacer)}`;break;case u.unrecognized_keys:t=`Unrecognized key(s) in object: ${S.joinValues(s.keys,", ")}`;break;case u.invalid_union:t="Invalid input";break;case u.invalid_union_discriminator:t=`Invalid discriminator value. Expected ${S.joinValues(s.options)}`;break;case u.invalid_enum_value:t=`Invalid enum value. Expected ${S.joinValues(s.options)}, received '${s.received}'`;break;case u.invalid_arguments:t="Invalid function arguments";break;case u.invalid_return_type:t="Invalid function return type";break;case u.invalid_date:t="Invalid date";break;case u.invalid_string:typeof s.validation=="object"?"includes"in s.validation?(t=`Invalid input: must include "${s.validation.includes}"`,typeof s.validation.position=="number"&&(t=`${t} at one or more positions greater than or equal to ${s.validation.position}`)):"startsWith"in s.validation?t=`Invalid input: must start with "${s.validation.startsWith}"`:"endsWith"in s.validation?t=`Invalid input: must end with "${s.validation.endsWith}"`:S.assertNever(s.validation):s.validation!=="regex"?t=`Invalid ${s.validation}`:t="Invalid";break;case u.too_small:s.type==="array"?t=`Array must contain ${s.exact?"exactly":s.inclusive?"at least":"more than"} ${s.minimum} element(s)`:s.type==="string"?t=`String must contain ${s.exact?"exactly":s.inclusive?"at least":"over"} ${s.minimum} character(s)`:s.type==="number"?t=`Number must be ${s.exact?"exactly equal to ":s.inclusive?"greater than or equal to ":"greater than "}${s.minimum}`:s.type==="date"?t=`Date must be ${s.exact?"exactly equal to ":s.inclusive?"greater than or equal to ":"greater than "}${new Date(Number(s.minimum))}`:t="Invalid input";break;case u.too_big:s.type==="array"?t=`Array must contain ${s.exact?"exactly":s.inclusive?"at most":"less than"} ${s.maximum} element(s)`:s.type==="string"?t=`String must contain ${s.exact?"exactly":s.inclusive?"at most":"under"} ${s.maximum} character(s)`:s.type==="number"?t=`Number must be ${s.exact?"exactly":s.inclusive?"less than or equal to":"less than"} ${s.maximum}`:s.type==="bigint"?t=`BigInt must be ${s.exact?"exactly":s.inclusive?"less than or equal to":"less than"} ${s.maximum}`:s.type==="date"?t=`Date must be ${s.exact?"exactly":s.inclusive?"smaller than or equal to":"smaller than"} ${new Date(Number(s.maximum))}`:t="Invalid input";break;case u.custom:t="Invalid input";break;case u.invalid_intersection_types:t="Intersection results could not be merged";break;case u.not_multiple_of:t=`Number must be a multiple of ${s.multipleOf}`;break;case u.not_finite:t="Number must be finite";break;default:t=e.defaultError,S.assertNever(s);}return {message:t}},Et=Ge;function os(s){Et=s;}function nt(){return Et}var rt=s=>{let{data:e,path:t,errorMaps:n,issueData:r}=s,a=[...t,...r.path||[]],i={...r,path:a};if(r.message!==undefined)return {...r,path:a,message:r.message};let o="",l=n.filter(c=>!!c).slice().reverse();for(let c of l)o=c(i,{data:e,defaultError:o}).message;return {...r,path:a,message:o}},cs=[];function f(s,e){let t=nt(),n=rt({issueData:e,data:s.data,path:s.path,errorMaps:[s.common.contextualErrorMap,s.schemaErrorMap,t,t===Ge?undefined:Ge].filter(r=>!!r)});s.common.issues.push(n);}var F=class s{constructor(){this.value="valid";}dirty(){this.value==="valid"&&(this.value="dirty");}abort(){this.value!=="aborted"&&(this.value="aborted");}static mergeArray(e,t){let n=[];for(let r of t){if(r.status==="aborted")return A;r.status==="dirty"&&e.dirty(),n.push(r.value);}return {status:e.value,value:n}}static async mergeObjectAsync(e,t){let n=[];for(let r of t){let a=await r.key,i=await r.value;n.push({key:a,value:i});}return s.mergeObjectSync(e,n)}static mergeObjectSync(e,t){let n={};for(let r of t){let{key:a,value:i}=r;if(a.status==="aborted"||i.status==="aborted")return A;a.status==="dirty"&&e.dirty(),i.status==="dirty"&&e.dirty(),a.value!=="__proto__"&&(typeof i.value<"u"||r.alwaysSet)&&(n[a.value]=i.value);}return {status:e.value,value:n}}},A=Object.freeze({status:"aborted"}),$e=s=>({status:"dirty",value:s}),j=s=>({status:"valid",value:s}),ft=s=>s.status==="aborted",mt=s=>s.status==="dirty",Ae=s=>s.status==="valid",Xe=s=>typeof Promise<"u"&&s instanceof Promise;function at(s,e,t,n){if(typeof e=="function"?s!==e||true:!e.has(s))throw new TypeError("Cannot read private member from an object whose class did not declare it");return e.get(s)}function Nt(s,e,t,n,r){if(typeof e=="function"?s!==e||true:!e.has(s))throw new TypeError("Cannot write private member to an object whose class did not declare it");return e.set(s,t),t}var g;(function(s){s.errToObj=e=>typeof e=="string"?{message:e}:e||{},s.toString=e=>typeof e=="string"?e:e?.message;})(g||(g={}));var qe,Qe,K=class{constructor(e,t,n,r){this._cachedPath=[],this.parent=e,this.data=t,this._path=n,this._key=r;}get path(){return this._cachedPath.length||(this._key instanceof Array?this._cachedPath.push(...this._path,...this._key):this._cachedPath.push(...this._path,this._key)),this._cachedPath}},At=(s,e)=>{if(Ae(e))return {success:true,data:e.value};if(!s.common.issues.length)throw new Error("Validation failed but no issues detected.");return {success:false,get error(){if(this._error)return this._error;let t=new z(s.common.issues);return this._error=t,this._error}}};function N(s){if(!s)return {};let{errorMap:e,invalid_type_error:t,required_error:n,description:r}=s;if(e&&(t||n))throw new Error(`Can't use "invalid_type_error" or "required_error" in conjunction with custom error map.`);return e?{errorMap:e,description:r}:{errorMap:(i,o)=>{var l,c;let{message:p}=s;return i.code==="invalid_enum_value"?{message:p??o.defaultError}:typeof o.data>"u"?{message:(l=p??n)!==null&&l!==undefined?l:o.defaultError}:i.code!=="invalid_type"?{message:o.defaultError}:{message:(c=p??t)!==null&&c!==undefined?c:o.defaultError}},description:r}}var x=class{get description(){return this._def.description}_getType(e){return ae(e.data)}_getOrReturnCtx(e,t){return t||{common:e.parent.common,data:e.data,parsedType:ae(e.data),schemaErrorMap:this._def.errorMap,path:e.path,parent:e.parent}}_processInputParams(e){return {status:new F,ctx:{common:e.parent.common,data:e.data,parsedType:ae(e.data),schemaErrorMap:this._def.errorMap,path:e.path,parent:e.parent}}}_parseSync(e){let t=this._parse(e);if(Xe(t))throw new Error("Synchronous parse encountered promise.");return t}_parseAsync(e){let t=this._parse(e);return Promise.resolve(t)}parse(e,t){let n=this.safeParse(e,t);if(n.success)return n.data;throw n.error}safeParse(e,t){var n;let r={common:{issues:[],async:(n=t?.async)!==null&&n!==undefined?n:false,contextualErrorMap:t?.errorMap},path:t?.path||[],schemaErrorMap:this._def.errorMap,parent:null,data:e,parsedType:ae(e)},a=this._parseSync({data:e,path:r.path,parent:r});return At(r,a)}"~validate"(e){var t,n;let r={common:{issues:[],async:!!this["~standard"].async},path:[],schemaErrorMap:this._def.errorMap,parent:null,data:e,parsedType:ae(e)};if(!this["~standard"].async)try{let a=this._parseSync({data:e,path:[],parent:r});return Ae(a)?{value:a.value}:{issues:r.common.issues}}catch(a){!((n=(t=a?.message)===null||t===undefined?undefined:t.toLowerCase())===null||n===undefined)&&n.includes("encountered")&&(this["~standard"].async=true),r.common={issues:[],async:true};}return this._parseAsync({data:e,path:[],parent:r}).then(a=>Ae(a)?{value:a.value}:{issues:r.common.issues})}async parseAsync(e,t){let n=await this.safeParseAsync(e,t);if(n.success)return n.data;throw n.error}async safeParseAsync(e,t){let n={common:{issues:[],contextualErrorMap:t?.errorMap,async:true},path:t?.path||[],schemaErrorMap:this._def.errorMap,parent:null,data:e,parsedType:ae(e)},r=this._parse({data:e,path:n.path,parent:n}),a=await(Xe(r)?r:Promise.resolve(r));return At(n,a)}refine(e,t){let n=r=>typeof t=="string"||typeof t>"u"?{message:t}:typeof t=="function"?t(r):t;return this._refinement((r,a)=>{let i=e(r),o=()=>a.addIssue({code:u.custom,...n(r)});return typeof Promise<"u"&&i instanceof Promise?i.then(l=>l?true:(o(),false)):i?true:(o(),false)})}refinement(e,t){return this._refinement((n,r)=>e(n)?true:(r.addIssue(typeof t=="function"?t(n,r):t),false))}_refinement(e){return new B({schema:this,typeName:y.ZodEffects,effect:{type:"refinement",refinement:e}})}superRefine(e){return this._refinement(e)}constructor(e){this.spa=this.safeParseAsync,this._def=e,this.parse=this.parse.bind(this),this.safeParse=this.safeParse.bind(this),this.parseAsync=this.parseAsync.bind(this),this.safeParseAsync=this.safeParseAsync.bind(this),this.spa=this.spa.bind(this),this.refine=this.refine.bind(this),this.refinement=this.refinement.bind(this),this.superRefine=this.superRefine.bind(this),this.optional=this.optional.bind(this),this.nullable=this.nullable.bind(this),this.nullish=this.nullish.bind(this),this.array=this.array.bind(this),this.promise=this.promise.bind(this),this.or=this.or.bind(this),this.and=this.and.bind(this),this.transform=this.transform.bind(this),this.brand=this.brand.bind(this),this.default=this.default.bind(this),this.catch=this.catch.bind(this),this.describe=this.describe.bind(this),this.pipe=this.pipe.bind(this),this.readonly=this.readonly.bind(this),this.isNullable=this.isNullable.bind(this),this.isOptional=this.isOptional.bind(this),this["~standard"]={version:1,vendor:"zod",validate:t=>this["~validate"](t)};}optional(){return Y.create(this,this._def)}nullable(){return ne.create(this,this._def)}nullish(){return this.nullable().optional()}array(){return oe.create(this)}promise(){return me.create(this,this._def)}or(e){return Te.create([this,e],this._def)}and(e){return be.create(this,e,this._def)}transform(e){return new B({...N(this._def),schema:this,typeName:y.ZodEffects,effect:{type:"transform",transform:e}})}default(e){let t=typeof e=="function"?e:()=>e;return new Re({...N(this._def),innerType:this,defaultValue:t,typeName:y.ZodDefault})}brand(){return new et({typeName:y.ZodBranded,type:this,...N(this._def)})}catch(e){let t=typeof e=="function"?e:()=>e;return new Me({...N(this._def),innerType:this,catchValue:t,typeName:y.ZodCatch})}describe(e){let t=this.constructor;return new t({...this._def,description:e})}pipe(e){return tt.create(this,e)}readonly(){return Pe.create(this)}isOptional(){return this.safeParse(undefined).success}isNullable(){return this.safeParse(null).success}},ls=/^c[^\s-]{8,}$/i,ds=/^[0-9a-z]+$/,us=/^[0-9A-HJKMNP-TV-Z]{26}$/i,ps=/^[0-9a-fA-F]{8}\b-[0-9a-fA-F]{4}\b-[0-9a-fA-F]{4}\b-[0-9a-fA-F]{4}\b-[0-9a-fA-F]{12}$/i,fs=/^[a-z0-9_-]{21}$/i,ms=/^[A-Za-z0-9-_]+\.[A-Za-z0-9-_]+\.[A-Za-z0-9-_]*$/,hs=/^[-+]?P(?!$)(?:(?:[-+]?\d+Y)|(?:[-+]?\d+[.,]\d+Y$))?(?:(?:[-+]?\d+M)|(?:[-+]?\d+[.,]\d+M$))?(?:(?:[-+]?\d+W)|(?:[-+]?\d+[.,]\d+W$))?(?:(?:[-+]?\d+D)|(?:[-+]?\d+[.,]\d+D$))?(?:T(?=[\d+-])(?:(?:[-+]?\d+H)|(?:[-+]?\d+[.,]\d+H$))?(?:(?:[-+]?\d+M)|(?:[-+]?\d+[.,]\d+M$))?(?:[-+]?\d+(?:[.,]\d+)?S)?)??$/,gs=/^(?!\.)(?!.*\.\.)([A-Z0-9_'+\-\.]*)[A-Z0-9_+-]@([A-Z0-9][A-Z0-9\-]*\.)+[A-Z]{2,}$/i,_s="^(\\p{Extended_Pictographic}|\\p{Emoji_Component})+$",ut,Is=/^(?:(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])\.){3}(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])$/,ys=/^(?:(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])\.){3}(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])\/(3[0-2]|[12]?[0-9])$/,As=/^(([0-9a-fA-F]{1,4}:){7,7}[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,7}:|([0-9a-fA-F]{1,4}:){1,6}:[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,5}(:[0-9a-fA-F]{1,4}){1,2}|([0-9a-fA-F]{1,4}:){1,4}(:[0-9a-fA-F]{1,4}){1,3}|([0-9a-fA-F]{1,4}:){1,3}(:[0-9a-fA-F]{1,4}){1,4}|([0-9a-fA-F]{1,4}:){1,2}(:[0-9a-fA-F]{1,4}){1,5}|[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4}){1,6})|:((:[0-9a-fA-F]{1,4}){1,7}|:)|fe80:(:[0-9a-fA-F]{0,4}){0,4}%[0-9a-zA-Z]{1,}|::(ffff(:0{1,4}){0,1}:){0,1}((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])|([0-9a-fA-F]{1,4}:){1,4}:((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9]))$/,vs=/^(([0-9a-fA-F]{1,4}:){7,7}[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,7}:|([0-9a-fA-F]{1,4}:){1,6}:[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,5}(:[0-9a-fA-F]{1,4}){1,2}|([0-9a-fA-F]{1,4}:){1,4}(:[0-9a-fA-F]{1,4}){1,3}|([0-9a-fA-F]{1,4}:){1,3}(:[0-9a-fA-F]{1,4}){1,4}|([0-9a-fA-F]{1,4}:){1,2}(:[0-9a-fA-F]{1,4}){1,5}|[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4}){1,6})|:((:[0-9a-fA-F]{1,4}){1,7}|:)|fe80:(:[0-9a-fA-F]{0,4}){0,4}%[0-9a-zA-Z]{1,}|::(ffff(:0{1,4}){0,1}:){0,1}((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])|([0-9a-fA-F]{1,4}:){1,4}:((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9]))\/(12[0-8]|1[01][0-9]|[1-9]?[0-9])$/,Es=/^([0-9a-zA-Z+/]{4})*(([0-9a-zA-Z+/]{2}==)|([0-9a-zA-Z+/]{3}=))?$/,Ns=/^([0-9a-zA-Z-_]{4})*(([0-9a-zA-Z-_]{2}(==)?)|([0-9a-zA-Z-_]{3}(=)?))?$/,xt="((\\d\\d[2468][048]|\\d\\d[13579][26]|\\d\\d0[48]|[02468][048]00|[13579][26]00)-02-29|\\d{4}-((0[13578]|1[02])-(0[1-9]|[12]\\d|3[01])|(0[469]|11)-(0[1-9]|[12]\\d|30)|(02)-(0[1-9]|1\\d|2[0-8])))",xs=new RegExp(`^${xt}$`);function St(s){let e="([01]\\d|2[0-3]):[0-5]\\d:[0-5]\\d";return s.precision?e=`${e}\\.\\d{${s.precision}}`:s.precision==null&&(e=`${e}(\\.\\d+)?`),e}function Ss(s){return new RegExp(`^${St(s)}$`)}function wt(s){let e=`${xt}T${St(s)}`,t=[];return t.push(s.local?"Z?":"Z"),s.offset&&t.push("([+-]\\d{2}:?\\d{2})"),e=`${e}(${t.join("|")})`,new RegExp(`^${e}$`)}function ws(s,e){return !!((e==="v4"||!e)&&Is.test(s)||(e==="v6"||!e)&&As.test(s))}function Ts(s,e){if(!ms.test(s))return  false;try{let[t]=s.split("."),n=t.replace(/-/g,"+").replace(/_/g,"/").padEnd(t.length+(4-t.length%4)%4,"="),r=JSON.parse(atob(n));return !(typeof r!="object"||r===null||!r.typ||!r.alg||e&&r.alg!==e)}catch{return  false}}function bs(s,e){return !!((e==="v4"||!e)&&ys.test(s)||(e==="v6"||!e)&&vs.test(s))}var pe=class s extends x{_parse(e){if(this._def.coerce&&(e.data=String(e.data)),this._getType(e)!==m.string){let a=this._getOrReturnCtx(e);return f(a,{code:u.invalid_type,expected:m.string,received:a.parsedType}),A}let n=new F,r;for(let a of this._def.checks)if(a.kind==="min")e.data.length<a.value&&(r=this._getOrReturnCtx(e,r),f(r,{code:u.too_small,minimum:a.value,type:"string",inclusive:true,exact:false,message:a.message}),n.dirty());else if(a.kind==="max")e.data.length>a.value&&(r=this._getOrReturnCtx(e,r),f(r,{code:u.too_big,maximum:a.value,type:"string",inclusive:true,exact:false,message:a.message}),n.dirty());else if(a.kind==="length"){let i=e.data.length>a.value,o=e.data.length<a.value;(i||o)&&(r=this._getOrReturnCtx(e,r),i?f(r,{code:u.too_big,maximum:a.value,type:"string",inclusive:true,exact:true,message:a.message}):o&&f(r,{code:u.too_small,minimum:a.value,type:"string",inclusive:true,exact:true,message:a.message}),n.dirty());}else if(a.kind==="email")gs.test(e.data)||(r=this._getOrReturnCtx(e,r),f(r,{validation:"email",code:u.invalid_string,message:a.message}),n.dirty());else if(a.kind==="emoji")ut||(ut=new RegExp(_s,"u")),ut.test(e.data)||(r=this._getOrReturnCtx(e,r),f(r,{validation:"emoji",code:u.invalid_string,message:a.message}),n.dirty());else if(a.kind==="uuid")ps.test(e.data)||(r=this._getOrReturnCtx(e,r),f(r,{validation:"uuid",code:u.invalid_string,message:a.message}),n.dirty());else if(a.kind==="nanoid")fs.test(e.data)||(r=this._getOrReturnCtx(e,r),f(r,{validation:"nanoid",code:u.invalid_string,message:a.message}),n.dirty());else if(a.kind==="cuid")ls.test(e.data)||(r=this._getOrReturnCtx(e,r),f(r,{validation:"cuid",code:u.invalid_string,message:a.message}),n.dirty());else if(a.kind==="cuid2")ds.test(e.data)||(r=this._getOrReturnCtx(e,r),f(r,{validation:"cuid2",code:u.invalid_string,message:a.message}),n.dirty());else if(a.kind==="ulid")us.test(e.data)||(r=this._getOrReturnCtx(e,r),f(r,{validation:"ulid",code:u.invalid_string,message:a.message}),n.dirty());else if(a.kind==="url")try{new URL(e.data);}catch{r=this._getOrReturnCtx(e,r),f(r,{validation:"url",code:u.invalid_string,message:a.message}),n.dirty();}else a.kind==="regex"?(a.regex.lastIndex=0,a.regex.test(e.data)||(r=this._getOrReturnCtx(e,r),f(r,{validation:"regex",code:u.invalid_string,message:a.message}),n.dirty())):a.kind==="trim"?e.data=e.data.trim():a.kind==="includes"?e.data.includes(a.value,a.position)||(r=this._getOrReturnCtx(e,r),f(r,{code:u.invalid_string,validation:{includes:a.value,position:a.position},message:a.message}),n.dirty()):a.kind==="toLowerCase"?e.data=e.data.toLowerCase():a.kind==="toUpperCase"?e.data=e.data.toUpperCase():a.kind==="startsWith"?e.data.startsWith(a.value)||(r=this._getOrReturnCtx(e,r),f(r,{code:u.invalid_string,validation:{startsWith:a.value},message:a.message}),n.dirty()):a.kind==="endsWith"?e.data.endsWith(a.value)||(r=this._getOrReturnCtx(e,r),f(r,{code:u.invalid_string,validation:{endsWith:a.value},message:a.message}),n.dirty()):a.kind==="datetime"?wt(a).test(e.data)||(r=this._getOrReturnCtx(e,r),f(r,{code:u.invalid_string,validation:"datetime",message:a.message}),n.dirty()):a.kind==="date"?xs.test(e.data)||(r=this._getOrReturnCtx(e,r),f(r,{code:u.invalid_string,validation:"date",message:a.message}),n.dirty()):a.kind==="time"?Ss(a).test(e.data)||(r=this._getOrReturnCtx(e,r),f(r,{code:u.invalid_string,validation:"time",message:a.message}),n.dirty()):a.kind==="duration"?hs.test(e.data)||(r=this._getOrReturnCtx(e,r),f(r,{validation:"duration",code:u.invalid_string,message:a.message}),n.dirty()):a.kind==="ip"?ws(e.data,a.version)||(r=this._getOrReturnCtx(e,r),f(r,{validation:"ip",code:u.invalid_string,message:a.message}),n.dirty()):a.kind==="jwt"?Ts(e.data,a.alg)||(r=this._getOrReturnCtx(e,r),f(r,{validation:"jwt",code:u.invalid_string,message:a.message}),n.dirty()):a.kind==="cidr"?bs(e.data,a.version)||(r=this._getOrReturnCtx(e,r),f(r,{validation:"cidr",code:u.invalid_string,message:a.message}),n.dirty()):a.kind==="base64"?Es.test(e.data)||(r=this._getOrReturnCtx(e,r),f(r,{validation:"base64",code:u.invalid_string,message:a.message}),n.dirty()):a.kind==="base64url"?Ns.test(e.data)||(r=this._getOrReturnCtx(e,r),f(r,{validation:"base64url",code:u.invalid_string,message:a.message}),n.dirty()):S.assertNever(a);return {status:n.value,value:e.data}}_regex(e,t,n){return this.refinement(r=>e.test(r),{validation:t,code:u.invalid_string,...g.errToObj(n)})}_addCheck(e){return new s({...this._def,checks:[...this._def.checks,e]})}email(e){return this._addCheck({kind:"email",...g.errToObj(e)})}url(e){return this._addCheck({kind:"url",...g.errToObj(e)})}emoji(e){return this._addCheck({kind:"emoji",...g.errToObj(e)})}uuid(e){return this._addCheck({kind:"uuid",...g.errToObj(e)})}nanoid(e){return this._addCheck({kind:"nanoid",...g.errToObj(e)})}cuid(e){return this._addCheck({kind:"cuid",...g.errToObj(e)})}cuid2(e){return this._addCheck({kind:"cuid2",...g.errToObj(e)})}ulid(e){return this._addCheck({kind:"ulid",...g.errToObj(e)})}base64(e){return this._addCheck({kind:"base64",...g.errToObj(e)})}base64url(e){return this._addCheck({kind:"base64url",...g.errToObj(e)})}jwt(e){return this._addCheck({kind:"jwt",...g.errToObj(e)})}ip(e){return this._addCheck({kind:"ip",...g.errToObj(e)})}cidr(e){return this._addCheck({kind:"cidr",...g.errToObj(e)})}datetime(e){var t,n;return typeof e=="string"?this._addCheck({kind:"datetime",precision:null,offset:false,local:false,message:e}):this._addCheck({kind:"datetime",precision:typeof e?.precision>"u"?null:e?.precision,offset:(t=e?.offset)!==null&&t!==undefined?t:false,local:(n=e?.local)!==null&&n!==undefined?n:false,...g.errToObj(e?.message)})}date(e){return this._addCheck({kind:"date",message:e})}time(e){return typeof e=="string"?this._addCheck({kind:"time",precision:null,message:e}):this._addCheck({kind:"time",precision:typeof e?.precision>"u"?null:e?.precision,...g.errToObj(e?.message)})}duration(e){return this._addCheck({kind:"duration",...g.errToObj(e)})}regex(e,t){return this._addCheck({kind:"regex",regex:e,...g.errToObj(t)})}includes(e,t){return this._addCheck({kind:"includes",value:e,position:t?.position,...g.errToObj(t?.message)})}startsWith(e,t){return this._addCheck({kind:"startsWith",value:e,...g.errToObj(t)})}endsWith(e,t){return this._addCheck({kind:"endsWith",value:e,...g.errToObj(t)})}min(e,t){return this._addCheck({kind:"min",value:e,...g.errToObj(t)})}max(e,t){return this._addCheck({kind:"max",value:e,...g.errToObj(t)})}length(e,t){return this._addCheck({kind:"length",value:e,...g.errToObj(t)})}nonempty(e){return this.min(1,g.errToObj(e))}trim(){return new s({...this._def,checks:[...this._def.checks,{kind:"trim"}]})}toLowerCase(){return new s({...this._def,checks:[...this._def.checks,{kind:"toLowerCase"}]})}toUpperCase(){return new s({...this._def,checks:[...this._def.checks,{kind:"toUpperCase"}]})}get isDatetime(){return !!this._def.checks.find(e=>e.kind==="datetime")}get isDate(){return !!this._def.checks.find(e=>e.kind==="date")}get isTime(){return !!this._def.checks.find(e=>e.kind==="time")}get isDuration(){return !!this._def.checks.find(e=>e.kind==="duration")}get isEmail(){return !!this._def.checks.find(e=>e.kind==="email")}get isURL(){return !!this._def.checks.find(e=>e.kind==="url")}get isEmoji(){return !!this._def.checks.find(e=>e.kind==="emoji")}get isUUID(){return !!this._def.checks.find(e=>e.kind==="uuid")}get isNANOID(){return !!this._def.checks.find(e=>e.kind==="nanoid")}get isCUID(){return !!this._def.checks.find(e=>e.kind==="cuid")}get isCUID2(){return !!this._def.checks.find(e=>e.kind==="cuid2")}get isULID(){return !!this._def.checks.find(e=>e.kind==="ulid")}get isIP(){return !!this._def.checks.find(e=>e.kind==="ip")}get isCIDR(){return !!this._def.checks.find(e=>e.kind==="cidr")}get isBase64(){return !!this._def.checks.find(e=>e.kind==="base64")}get isBase64url(){return !!this._def.checks.find(e=>e.kind==="base64url")}get minLength(){let e=null;for(let t of this._def.checks)t.kind==="min"&&(e===null||t.value>e)&&(e=t.value);return e}get maxLength(){let e=null;for(let t of this._def.checks)t.kind==="max"&&(e===null||t.value<e)&&(e=t.value);return e}};pe.create=s=>{var e;return new pe({checks:[],typeName:y.ZodString,coerce:(e=s?.coerce)!==null&&e!==undefined?e:false,...N(s)})};function ks(s,e){let t=(s.toString().split(".")[1]||"").length,n=(e.toString().split(".")[1]||"").length,r=t>n?t:n,a=parseInt(s.toFixed(r).replace(".","")),i=parseInt(e.toFixed(r).replace(".",""));return a%i/Math.pow(10,r)}var ve=class s extends x{constructor(){super(...arguments),this.min=this.gte,this.max=this.lte,this.step=this.multipleOf;}_parse(e){if(this._def.coerce&&(e.data=Number(e.data)),this._getType(e)!==m.number){let a=this._getOrReturnCtx(e);return f(a,{code:u.invalid_type,expected:m.number,received:a.parsedType}),A}let n,r=new F;for(let a of this._def.checks)a.kind==="int"?S.isInteger(e.data)||(n=this._getOrReturnCtx(e,n),f(n,{code:u.invalid_type,expected:"integer",received:"float",message:a.message}),r.dirty()):a.kind==="min"?(a.inclusive?e.data<a.value:e.data<=a.value)&&(n=this._getOrReturnCtx(e,n),f(n,{code:u.too_small,minimum:a.value,type:"number",inclusive:a.inclusive,exact:false,message:a.message}),r.dirty()):a.kind==="max"?(a.inclusive?e.data>a.value:e.data>=a.value)&&(n=this._getOrReturnCtx(e,n),f(n,{code:u.too_big,maximum:a.value,type:"number",inclusive:a.inclusive,exact:false,message:a.message}),r.dirty()):a.kind==="multipleOf"?ks(e.data,a.value)!==0&&(n=this._getOrReturnCtx(e,n),f(n,{code:u.not_multiple_of,multipleOf:a.value,message:a.message}),r.dirty()):a.kind==="finite"?Number.isFinite(e.data)||(n=this._getOrReturnCtx(e,n),f(n,{code:u.not_finite,message:a.message}),r.dirty()):S.assertNever(a);return {status:r.value,value:e.data}}gte(e,t){return this.setLimit("min",e,true,g.toString(t))}gt(e,t){return this.setLimit("min",e,false,g.toString(t))}lte(e,t){return this.setLimit("max",e,true,g.toString(t))}lt(e,t){return this.setLimit("max",e,false,g.toString(t))}setLimit(e,t,n,r){return new s({...this._def,checks:[...this._def.checks,{kind:e,value:t,inclusive:n,message:g.toString(r)}]})}_addCheck(e){return new s({...this._def,checks:[...this._def.checks,e]})}int(e){return this._addCheck({kind:"int",message:g.toString(e)})}positive(e){return this._addCheck({kind:"min",value:0,inclusive:false,message:g.toString(e)})}negative(e){return this._addCheck({kind:"max",value:0,inclusive:false,message:g.toString(e)})}nonpositive(e){return this._addCheck({kind:"max",value:0,inclusive:true,message:g.toString(e)})}nonnegative(e){return this._addCheck({kind:"min",value:0,inclusive:true,message:g.toString(e)})}multipleOf(e,t){return this._addCheck({kind:"multipleOf",value:e,message:g.toString(t)})}finite(e){return this._addCheck({kind:"finite",message:g.toString(e)})}safe(e){return this._addCheck({kind:"min",inclusive:true,value:Number.MIN_SAFE_INTEGER,message:g.toString(e)})._addCheck({kind:"max",inclusive:true,value:Number.MAX_SAFE_INTEGER,message:g.toString(e)})}get minValue(){let e=null;for(let t of this._def.checks)t.kind==="min"&&(e===null||t.value>e)&&(e=t.value);return e}get maxValue(){let e=null;for(let t of this._def.checks)t.kind==="max"&&(e===null||t.value<e)&&(e=t.value);return e}get isInt(){return !!this._def.checks.find(e=>e.kind==="int"||e.kind==="multipleOf"&&S.isInteger(e.value))}get isFinite(){let e=null,t=null;for(let n of this._def.checks){if(n.kind==="finite"||n.kind==="int"||n.kind==="multipleOf")return  true;n.kind==="min"?(t===null||n.value>t)&&(t=n.value):n.kind==="max"&&(e===null||n.value<e)&&(e=n.value);}return Number.isFinite(t)&&Number.isFinite(e)}};ve.create=s=>new ve({checks:[],typeName:y.ZodNumber,coerce:s?.coerce||false,...N(s)});var Ee=class s extends x{constructor(){super(...arguments),this.min=this.gte,this.max=this.lte;}_parse(e){if(this._def.coerce)try{e.data=BigInt(e.data);}catch{return this._getInvalidInput(e)}if(this._getType(e)!==m.bigint)return this._getInvalidInput(e);let n,r=new F;for(let a of this._def.checks)a.kind==="min"?(a.inclusive?e.data<a.value:e.data<=a.value)&&(n=this._getOrReturnCtx(e,n),f(n,{code:u.too_small,type:"bigint",minimum:a.value,inclusive:a.inclusive,message:a.message}),r.dirty()):a.kind==="max"?(a.inclusive?e.data>a.value:e.data>=a.value)&&(n=this._getOrReturnCtx(e,n),f(n,{code:u.too_big,type:"bigint",maximum:a.value,inclusive:a.inclusive,message:a.message}),r.dirty()):a.kind==="multipleOf"?e.data%a.value!==BigInt(0)&&(n=this._getOrReturnCtx(e,n),f(n,{code:u.not_multiple_of,multipleOf:a.value,message:a.message}),r.dirty()):S.assertNever(a);return {status:r.value,value:e.data}}_getInvalidInput(e){let t=this._getOrReturnCtx(e);return f(t,{code:u.invalid_type,expected:m.bigint,received:t.parsedType}),A}gte(e,t){return this.setLimit("min",e,true,g.toString(t))}gt(e,t){return this.setLimit("min",e,false,g.toString(t))}lte(e,t){return this.setLimit("max",e,true,g.toString(t))}lt(e,t){return this.setLimit("max",e,false,g.toString(t))}setLimit(e,t,n,r){return new s({...this._def,checks:[...this._def.checks,{kind:e,value:t,inclusive:n,message:g.toString(r)}]})}_addCheck(e){return new s({...this._def,checks:[...this._def.checks,e]})}positive(e){return this._addCheck({kind:"min",value:BigInt(0),inclusive:false,message:g.toString(e)})}negative(e){return this._addCheck({kind:"max",value:BigInt(0),inclusive:false,message:g.toString(e)})}nonpositive(e){return this._addCheck({kind:"max",value:BigInt(0),inclusive:true,message:g.toString(e)})}nonnegative(e){return this._addCheck({kind:"min",value:BigInt(0),inclusive:true,message:g.toString(e)})}multipleOf(e,t){return this._addCheck({kind:"multipleOf",value:e,message:g.toString(t)})}get minValue(){let e=null;for(let t of this._def.checks)t.kind==="min"&&(e===null||t.value>e)&&(e=t.value);return e}get maxValue(){let e=null;for(let t of this._def.checks)t.kind==="max"&&(e===null||t.value<e)&&(e=t.value);return e}};Ee.create=s=>{var e;return new Ee({checks:[],typeName:y.ZodBigInt,coerce:(e=s?.coerce)!==null&&e!==undefined?e:false,...N(s)})};var Ne=class extends x{_parse(e){if(this._def.coerce&&(e.data=!!e.data),this._getType(e)!==m.boolean){let n=this._getOrReturnCtx(e);return f(n,{code:u.invalid_type,expected:m.boolean,received:n.parsedType}),A}return j(e.data)}};Ne.create=s=>new Ne({typeName:y.ZodBoolean,coerce:s?.coerce||false,...N(s)});var xe=class s extends x{_parse(e){if(this._def.coerce&&(e.data=new Date(e.data)),this._getType(e)!==m.date){let a=this._getOrReturnCtx(e);return f(a,{code:u.invalid_type,expected:m.date,received:a.parsedType}),A}if(isNaN(e.data.getTime())){let a=this._getOrReturnCtx(e);return f(a,{code:u.invalid_date}),A}let n=new F,r;for(let a of this._def.checks)a.kind==="min"?e.data.getTime()<a.value&&(r=this._getOrReturnCtx(e,r),f(r,{code:u.too_small,message:a.message,inclusive:true,exact:false,minimum:a.value,type:"date"}),n.dirty()):a.kind==="max"?e.data.getTime()>a.value&&(r=this._getOrReturnCtx(e,r),f(r,{code:u.too_big,message:a.message,inclusive:true,exact:false,maximum:a.value,type:"date"}),n.dirty()):S.assertNever(a);return {status:n.value,value:new Date(e.data.getTime())}}_addCheck(e){return new s({...this._def,checks:[...this._def.checks,e]})}min(e,t){return this._addCheck({kind:"min",value:e.getTime(),message:g.toString(t)})}max(e,t){return this._addCheck({kind:"max",value:e.getTime(),message:g.toString(t)})}get minDate(){let e=null;for(let t of this._def.checks)t.kind==="min"&&(e===null||t.value>e)&&(e=t.value);return e!=null?new Date(e):null}get maxDate(){let e=null;for(let t of this._def.checks)t.kind==="max"&&(e===null||t.value<e)&&(e=t.value);return e!=null?new Date(e):null}};xe.create=s=>new xe({checks:[],coerce:s?.coerce||false,typeName:y.ZodDate,...N(s)});var He=class extends x{_parse(e){if(this._getType(e)!==m.symbol){let n=this._getOrReturnCtx(e);return f(n,{code:u.invalid_type,expected:m.symbol,received:n.parsedType}),A}return j(e.data)}};He.create=s=>new He({typeName:y.ZodSymbol,...N(s)});var Se=class extends x{_parse(e){if(this._getType(e)!==m.undefined){let n=this._getOrReturnCtx(e);return f(n,{code:u.invalid_type,expected:m.undefined,received:n.parsedType}),A}return j(e.data)}};Se.create=s=>new Se({typeName:y.ZodUndefined,...N(s)});var we=class extends x{_parse(e){if(this._getType(e)!==m.null){let n=this._getOrReturnCtx(e);return f(n,{code:u.invalid_type,expected:m.null,received:n.parsedType}),A}return j(e.data)}};we.create=s=>new we({typeName:y.ZodNull,...N(s)});var fe=class extends x{constructor(){super(...arguments),this._any=true;}_parse(e){return j(e.data)}};fe.create=s=>new fe({typeName:y.ZodAny,...N(s)});var ie=class extends x{constructor(){super(...arguments),this._unknown=true;}_parse(e){return j(e.data)}};ie.create=s=>new ie({typeName:y.ZodUnknown,...N(s)});var X=class extends x{_parse(e){let t=this._getOrReturnCtx(e);return f(t,{code:u.invalid_type,expected:m.never,received:t.parsedType}),A}};X.create=s=>new X({typeName:y.ZodNever,...N(s)});var Ze=class extends x{_parse(e){if(this._getType(e)!==m.undefined){let n=this._getOrReturnCtx(e);return f(n,{code:u.invalid_type,expected:m.void,received:n.parsedType}),A}return j(e.data)}};Ze.create=s=>new Ze({typeName:y.ZodVoid,...N(s)});var oe=class s extends x{_parse(e){let{ctx:t,status:n}=this._processInputParams(e),r=this._def;if(t.parsedType!==m.array)return f(t,{code:u.invalid_type,expected:m.array,received:t.parsedType}),A;if(r.exactLength!==null){let i=t.data.length>r.exactLength.value,o=t.data.length<r.exactLength.value;(i||o)&&(f(t,{code:i?u.too_big:u.too_small,minimum:o?r.exactLength.value:undefined,maximum:i?r.exactLength.value:undefined,type:"array",inclusive:true,exact:true,message:r.exactLength.message}),n.dirty());}if(r.minLength!==null&&t.data.length<r.minLength.value&&(f(t,{code:u.too_small,minimum:r.minLength.value,type:"array",inclusive:true,exact:false,message:r.minLength.message}),n.dirty()),r.maxLength!==null&&t.data.length>r.maxLength.value&&(f(t,{code:u.too_big,maximum:r.maxLength.value,type:"array",inclusive:true,exact:false,message:r.maxLength.message}),n.dirty()),t.common.async)return Promise.all([...t.data].map((i,o)=>r.type._parseAsync(new K(t,i,t.path,o)))).then(i=>F.mergeArray(n,i));let a=[...t.data].map((i,o)=>r.type._parseSync(new K(t,i,t.path,o)));return F.mergeArray(n,a)}get element(){return this._def.type}min(e,t){return new s({...this._def,minLength:{value:e,message:g.toString(t)}})}max(e,t){return new s({...this._def,maxLength:{value:e,message:g.toString(t)}})}length(e,t){return new s({...this._def,exactLength:{value:e,message:g.toString(t)}})}nonempty(e){return this.min(1,e)}};oe.create=(s,e)=>new oe({type:s,minLength:null,maxLength:null,exactLength:null,typeName:y.ZodArray,...N(e)});function Ue(s){if(s instanceof G){let e={};for(let t in s.shape){let n=s.shape[t];e[t]=Y.create(Ue(n));}return new G({...s._def,shape:()=>e})}else return s instanceof oe?new oe({...s._def,type:Ue(s.element)}):s instanceof Y?Y.create(Ue(s.unwrap())):s instanceof ne?ne.create(Ue(s.unwrap())):s instanceof se?se.create(s.items.map(e=>Ue(e))):s}var G=class s extends x{constructor(){super(...arguments),this._cached=null,this.nonstrict=this.passthrough,this.augment=this.extend;}_getCached(){if(this._cached!==null)return this._cached;let e=this._def.shape(),t=S.objectKeys(e);return this._cached={shape:e,keys:t}}_parse(e){if(this._getType(e)!==m.object){let c=this._getOrReturnCtx(e);return f(c,{code:u.invalid_type,expected:m.object,received:c.parsedType}),A}let{status:n,ctx:r}=this._processInputParams(e),{shape:a,keys:i}=this._getCached(),o=[];if(!(this._def.catchall instanceof X&&this._def.unknownKeys==="strip"))for(let c in r.data)i.includes(c)||o.push(c);let l=[];for(let c of i){let p=a[c],d=r.data[c];l.push({key:{status:"valid",value:c},value:p._parse(new K(r,d,r.path,c)),alwaysSet:c in r.data});}if(this._def.catchall instanceof X){let c=this._def.unknownKeys;if(c==="passthrough")for(let p of o)l.push({key:{status:"valid",value:p},value:{status:"valid",value:r.data[p]}});else if(c==="strict")o.length>0&&(f(r,{code:u.unrecognized_keys,keys:o}),n.dirty());else if(c!=="strip")throw new Error("Internal ZodObject error: invalid unknownKeys value.")}else {let c=this._def.catchall;for(let p of o){let d=r.data[p];l.push({key:{status:"valid",value:p},value:c._parse(new K(r,d,r.path,p)),alwaysSet:p in r.data});}}return r.common.async?Promise.resolve().then(async()=>{let c=[];for(let p of l){let d=await p.key,h=await p.value;c.push({key:d,value:h,alwaysSet:p.alwaysSet});}return c}).then(c=>F.mergeObjectSync(n,c)):F.mergeObjectSync(n,l)}get shape(){return this._def.shape()}strict(e){return g.errToObj,new s({...this._def,unknownKeys:"strict",...e!==undefined?{errorMap:(t,n)=>{var r,a,i,o;let l=(i=(a=(r=this._def).errorMap)===null||a===undefined?undefined:a.call(r,t,n).message)!==null&&i!==undefined?i:n.defaultError;return t.code==="unrecognized_keys"?{message:(o=g.errToObj(e).message)!==null&&o!==undefined?o:l}:{message:l}}}:{}})}strip(){return new s({...this._def,unknownKeys:"strip"})}passthrough(){return new s({...this._def,unknownKeys:"passthrough"})}extend(e){return new s({...this._def,shape:()=>({...this._def.shape(),...e})})}merge(e){return new s({unknownKeys:e._def.unknownKeys,catchall:e._def.catchall,shape:()=>({...this._def.shape(),...e._def.shape()}),typeName:y.ZodObject})}setKey(e,t){return this.augment({[e]:t})}catchall(e){return new s({...this._def,catchall:e})}pick(e){let t={};return S.objectKeys(e).forEach(n=>{e[n]&&this.shape[n]&&(t[n]=this.shape[n]);}),new s({...this._def,shape:()=>t})}omit(e){let t={};return S.objectKeys(this.shape).forEach(n=>{e[n]||(t[n]=this.shape[n]);}),new s({...this._def,shape:()=>t})}deepPartial(){return Ue(this)}partial(e){let t={};return S.objectKeys(this.shape).forEach(n=>{let r=this.shape[n];e&&!e[n]?t[n]=r:t[n]=r.optional();}),new s({...this._def,shape:()=>t})}required(e){let t={};return S.objectKeys(this.shape).forEach(n=>{if(e&&!e[n])t[n]=this.shape[n];else {let a=this.shape[n];for(;a instanceof Y;)a=a._def.innerType;t[n]=a;}}),new s({...this._def,shape:()=>t})}keyof(){return Tt(S.objectKeys(this.shape))}};G.create=(s,e)=>new G({shape:()=>s,unknownKeys:"strip",catchall:X.create(),typeName:y.ZodObject,...N(e)});G.strictCreate=(s,e)=>new G({shape:()=>s,unknownKeys:"strict",catchall:X.create(),typeName:y.ZodObject,...N(e)});G.lazycreate=(s,e)=>new G({shape:s,unknownKeys:"strip",catchall:X.create(),typeName:y.ZodObject,...N(e)});var Te=class extends x{_parse(e){let{ctx:t}=this._processInputParams(e),n=this._def.options;function r(a){for(let o of a)if(o.result.status==="valid")return o.result;for(let o of a)if(o.result.status==="dirty")return t.common.issues.push(...o.ctx.common.issues),o.result;let i=a.map(o=>new z(o.ctx.common.issues));return f(t,{code:u.invalid_union,unionErrors:i}),A}if(t.common.async)return Promise.all(n.map(async a=>{let i={...t,common:{...t.common,issues:[]},parent:null};return {result:await a._parseAsync({data:t.data,path:t.path,parent:i}),ctx:i}})).then(r);{let a,i=[];for(let l of n){let c={...t,common:{...t.common,issues:[]},parent:null},p=l._parseSync({data:t.data,path:t.path,parent:c});if(p.status==="valid")return p;p.status==="dirty"&&!a&&(a={result:p,ctx:c}),c.common.issues.length&&i.push(c.common.issues);}if(a)return t.common.issues.push(...a.ctx.common.issues),a.result;let o=i.map(l=>new z(l));return f(t,{code:u.invalid_union,unionErrors:o}),A}}get options(){return this._def.options}};Te.create=(s,e)=>new Te({options:s,typeName:y.ZodUnion,...N(e)});var re=s=>s instanceof ke?re(s.schema):s instanceof B?re(s.innerType()):s instanceof De?[s.value]:s instanceof Ce?s.options:s instanceof Oe?S.objectValues(s.enum):s instanceof Re?re(s._def.innerType):s instanceof Se?[undefined]:s instanceof we?[null]:s instanceof Y?[undefined,...re(s.unwrap())]:s instanceof ne?[null,...re(s.unwrap())]:s instanceof et||s instanceof Pe?re(s.unwrap()):s instanceof Me?re(s._def.innerType):[],it=class s extends x{_parse(e){let{ctx:t}=this._processInputParams(e);if(t.parsedType!==m.object)return f(t,{code:u.invalid_type,expected:m.object,received:t.parsedType}),A;let n=this.discriminator,r=t.data[n],a=this.optionsMap.get(r);return a?t.common.async?a._parseAsync({data:t.data,path:t.path,parent:t}):a._parseSync({data:t.data,path:t.path,parent:t}):(f(t,{code:u.invalid_union_discriminator,options:Array.from(this.optionsMap.keys()),path:[n]}),A)}get discriminator(){return this._def.discriminator}get options(){return this._def.options}get optionsMap(){return this._def.optionsMap}static create(e,t,n){let r=new Map;for(let a of t){let i=re(a.shape[e]);if(!i.length)throw new Error(`A discriminator value for key \`${e}\` could not be extracted from all schema options`);for(let o of i){if(r.has(o))throw new Error(`Discriminator property ${String(e)} has duplicate value ${String(o)}`);r.set(o,a);}}return new s({typeName:y.ZodDiscriminatedUnion,discriminator:e,options:t,optionsMap:r,...N(n)})}};function ht(s,e){let t=ae(s),n=ae(e);if(s===e)return {valid:true,data:s};if(t===m.object&&n===m.object){let r=S.objectKeys(e),a=S.objectKeys(s).filter(o=>r.indexOf(o)!==-1),i={...s,...e};for(let o of a){let l=ht(s[o],e[o]);if(!l.valid)return {valid:false};i[o]=l.data;}return {valid:true,data:i}}else if(t===m.array&&n===m.array){if(s.length!==e.length)return {valid:false};let r=[];for(let a=0;a<s.length;a++){let i=s[a],o=e[a],l=ht(i,o);if(!l.valid)return {valid:false};r.push(l.data);}return {valid:true,data:r}}else return t===m.date&&n===m.date&&+s==+e?{valid:true,data:s}:{valid:false}}var be=class extends x{_parse(e){let{status:t,ctx:n}=this._processInputParams(e),r=(a,i)=>{if(ft(a)||ft(i))return A;let o=ht(a.value,i.value);return o.valid?((mt(a)||mt(i))&&t.dirty(),{status:t.value,value:o.data}):(f(n,{code:u.invalid_intersection_types}),A)};return n.common.async?Promise.all([this._def.left._parseAsync({data:n.data,path:n.path,parent:n}),this._def.right._parseAsync({data:n.data,path:n.path,parent:n})]).then(([a,i])=>r(a,i)):r(this._def.left._parseSync({data:n.data,path:n.path,parent:n}),this._def.right._parseSync({data:n.data,path:n.path,parent:n}))}};be.create=(s,e,t)=>new be({left:s,right:e,typeName:y.ZodIntersection,...N(t)});var se=class s extends x{_parse(e){let{status:t,ctx:n}=this._processInputParams(e);if(n.parsedType!==m.array)return f(n,{code:u.invalid_type,expected:m.array,received:n.parsedType}),A;if(n.data.length<this._def.items.length)return f(n,{code:u.too_small,minimum:this._def.items.length,inclusive:true,exact:false,type:"array"}),A;!this._def.rest&&n.data.length>this._def.items.length&&(f(n,{code:u.too_big,maximum:this._def.items.length,inclusive:true,exact:false,type:"array"}),t.dirty());let a=[...n.data].map((i,o)=>{let l=this._def.items[o]||this._def.rest;return l?l._parse(new K(n,i,n.path,o)):null}).filter(i=>!!i);return n.common.async?Promise.all(a).then(i=>F.mergeArray(t,i)):F.mergeArray(t,a)}get items(){return this._def.items}rest(e){return new s({...this._def,rest:e})}};se.create=(s,e)=>{if(!Array.isArray(s))throw new Error("You must pass an array of schemas to z.tuple([ ... ])");return new se({items:s,typeName:y.ZodTuple,rest:null,...N(e)})};var ot=class s extends x{get keySchema(){return this._def.keyType}get valueSchema(){return this._def.valueType}_parse(e){let{status:t,ctx:n}=this._processInputParams(e);if(n.parsedType!==m.object)return f(n,{code:u.invalid_type,expected:m.object,received:n.parsedType}),A;let r=[],a=this._def.keyType,i=this._def.valueType;for(let o in n.data)r.push({key:a._parse(new K(n,o,n.path,o)),value:i._parse(new K(n,n.data[o],n.path,o)),alwaysSet:o in n.data});return n.common.async?F.mergeObjectAsync(t,r):F.mergeObjectSync(t,r)}get element(){return this._def.valueType}static create(e,t,n){return t instanceof x?new s({keyType:e,valueType:t,typeName:y.ZodRecord,...N(n)}):new s({keyType:pe.create(),valueType:e,typeName:y.ZodRecord,...N(t)})}},ze=class extends x{get keySchema(){return this._def.keyType}get valueSchema(){return this._def.valueType}_parse(e){let{status:t,ctx:n}=this._processInputParams(e);if(n.parsedType!==m.map)return f(n,{code:u.invalid_type,expected:m.map,received:n.parsedType}),A;let r=this._def.keyType,a=this._def.valueType,i=[...n.data.entries()].map(([o,l],c)=>({key:r._parse(new K(n,o,n.path,[c,"key"])),value:a._parse(new K(n,l,n.path,[c,"value"]))}));if(n.common.async){let o=new Map;return Promise.resolve().then(async()=>{for(let l of i){let c=await l.key,p=await l.value;if(c.status==="aborted"||p.status==="aborted")return A;(c.status==="dirty"||p.status==="dirty")&&t.dirty(),o.set(c.value,p.value);}return {status:t.value,value:o}})}else {let o=new Map;for(let l of i){let c=l.key,p=l.value;if(c.status==="aborted"||p.status==="aborted")return A;(c.status==="dirty"||p.status==="dirty")&&t.dirty(),o.set(c.value,p.value);}return {status:t.value,value:o}}}};ze.create=(s,e,t)=>new ze({valueType:e,keyType:s,typeName:y.ZodMap,...N(t)});var Be=class s extends x{_parse(e){let{status:t,ctx:n}=this._processInputParams(e);if(n.parsedType!==m.set)return f(n,{code:u.invalid_type,expected:m.set,received:n.parsedType}),A;let r=this._def;r.minSize!==null&&n.data.size<r.minSize.value&&(f(n,{code:u.too_small,minimum:r.minSize.value,type:"set",inclusive:true,exact:false,message:r.minSize.message}),t.dirty()),r.maxSize!==null&&n.data.size>r.maxSize.value&&(f(n,{code:u.too_big,maximum:r.maxSize.value,type:"set",inclusive:true,exact:false,message:r.maxSize.message}),t.dirty());let a=this._def.valueType;function i(l){let c=new Set;for(let p of l){if(p.status==="aborted")return A;p.status==="dirty"&&t.dirty(),c.add(p.value);}return {status:t.value,value:c}}let o=[...n.data.values()].map((l,c)=>a._parse(new K(n,l,n.path,c)));return n.common.async?Promise.all(o).then(l=>i(l)):i(o)}min(e,t){return new s({...this._def,minSize:{value:e,message:g.toString(t)}})}max(e,t){return new s({...this._def,maxSize:{value:e,message:g.toString(t)}})}size(e,t){return this.min(e,t).max(e,t)}nonempty(e){return this.min(1,e)}};Be.create=(s,e)=>new Be({valueType:s,minSize:null,maxSize:null,typeName:y.ZodSet,...N(e)});var ct=class s extends x{constructor(){super(...arguments),this.validate=this.implement;}_parse(e){let{ctx:t}=this._processInputParams(e);if(t.parsedType!==m.function)return f(t,{code:u.invalid_type,expected:m.function,received:t.parsedType}),A;function n(o,l){return rt({data:o,path:t.path,errorMaps:[t.common.contextualErrorMap,t.schemaErrorMap,nt(),Ge].filter(c=>!!c),issueData:{code:u.invalid_arguments,argumentsError:l}})}function r(o,l){return rt({data:o,path:t.path,errorMaps:[t.common.contextualErrorMap,t.schemaErrorMap,nt(),Ge].filter(c=>!!c),issueData:{code:u.invalid_return_type,returnTypeError:l}})}let a={errorMap:t.common.contextualErrorMap},i=t.data;if(this._def.returns instanceof me){let o=this;return j(async function(...l){let c=new z([]),p=await o._def.args.parseAsync(l,a).catch(E=>{throw c.addIssue(n(l,E)),c}),d=await Reflect.apply(i,this,p);return await o._def.returns._def.type.parseAsync(d,a).catch(E=>{throw c.addIssue(r(d,E)),c})})}else {let o=this;return j(function(...l){let c=o._def.args.safeParse(l,a);if(!c.success)throw new z([n(l,c.error)]);let p=Reflect.apply(i,this,c.data),d=o._def.returns.safeParse(p,a);if(!d.success)throw new z([r(p,d.error)]);return d.data})}}parameters(){return this._def.args}returnType(){return this._def.returns}args(...e){return new s({...this._def,args:se.create(e).rest(ie.create())})}returns(e){return new s({...this._def,returns:e})}implement(e){return this.parse(e)}strictImplement(e){return this.parse(e)}static create(e,t,n){return new s({args:e||se.create([]).rest(ie.create()),returns:t||ie.create(),typeName:y.ZodFunction,...N(n)})}},ke=class extends x{get schema(){return this._def.getter()}_parse(e){let{ctx:t}=this._processInputParams(e);return this._def.getter()._parse({data:t.data,path:t.path,parent:t})}};ke.create=(s,e)=>new ke({getter:s,typeName:y.ZodLazy,...N(e)});var De=class extends x{_parse(e){if(e.data!==this._def.value){let t=this._getOrReturnCtx(e);return f(t,{received:t.data,code:u.invalid_literal,expected:this._def.value}),A}return {status:"valid",value:e.data}}get value(){return this._def.value}};De.create=(s,e)=>new De({value:s,typeName:y.ZodLiteral,...N(e)});function Tt(s,e){return new Ce({values:s,typeName:y.ZodEnum,...N(e)})}var Ce=class s extends x{constructor(){super(...arguments),qe.set(this,undefined);}_parse(e){if(typeof e.data!="string"){let t=this._getOrReturnCtx(e),n=this._def.values;return f(t,{expected:S.joinValues(n),received:t.parsedType,code:u.invalid_type}),A}if(at(this,qe)||Nt(this,qe,new Set(this._def.values)),!at(this,qe).has(e.data)){let t=this._getOrReturnCtx(e),n=this._def.values;return f(t,{received:t.data,code:u.invalid_enum_value,options:n}),A}return j(e.data)}get options(){return this._def.values}get enum(){let e={};for(let t of this._def.values)e[t]=t;return e}get Values(){let e={};for(let t of this._def.values)e[t]=t;return e}get Enum(){let e={};for(let t of this._def.values)e[t]=t;return e}extract(e,t=this._def){return s.create(e,{...this._def,...t})}exclude(e,t=this._def){return s.create(this.options.filter(n=>!e.includes(n)),{...this._def,...t})}};qe=new WeakMap;Ce.create=Tt;var Oe=class extends x{constructor(){super(...arguments),Qe.set(this,undefined);}_parse(e){let t=S.getValidEnumValues(this._def.values),n=this._getOrReturnCtx(e);if(n.parsedType!==m.string&&n.parsedType!==m.number){let r=S.objectValues(t);return f(n,{expected:S.joinValues(r),received:n.parsedType,code:u.invalid_type}),A}if(at(this,Qe)||Nt(this,Qe,new Set(S.getValidEnumValues(this._def.values))),!at(this,Qe).has(e.data)){let r=S.objectValues(t);return f(n,{received:n.data,code:u.invalid_enum_value,options:r}),A}return j(e.data)}get enum(){return this._def.values}};Qe=new WeakMap;Oe.create=(s,e)=>new Oe({values:s,typeName:y.ZodNativeEnum,...N(e)});var me=class extends x{unwrap(){return this._def.type}_parse(e){let{ctx:t}=this._processInputParams(e);if(t.parsedType!==m.promise&&t.common.async===false)return f(t,{code:u.invalid_type,expected:m.promise,received:t.parsedType}),A;let n=t.parsedType===m.promise?t.data:Promise.resolve(t.data);return j(n.then(r=>this._def.type.parseAsync(r,{path:t.path,errorMap:t.common.contextualErrorMap})))}};me.create=(s,e)=>new me({type:s,typeName:y.ZodPromise,...N(e)});var B=class extends x{innerType(){return this._def.schema}sourceType(){return this._def.schema._def.typeName===y.ZodEffects?this._def.schema.sourceType():this._def.schema}_parse(e){let{status:t,ctx:n}=this._processInputParams(e),r=this._def.effect||null,a={addIssue:i=>{f(n,i),i.fatal?t.abort():t.dirty();},get path(){return n.path}};if(a.addIssue=a.addIssue.bind(a),r.type==="preprocess"){let i=r.transform(n.data,a);if(n.common.async)return Promise.resolve(i).then(async o=>{if(t.value==="aborted")return A;let l=await this._def.schema._parseAsync({data:o,path:n.path,parent:n});return l.status==="aborted"?A:l.status==="dirty"||t.value==="dirty"?$e(l.value):l});{if(t.value==="aborted")return A;let o=this._def.schema._parseSync({data:i,path:n.path,parent:n});return o.status==="aborted"?A:o.status==="dirty"||t.value==="dirty"?$e(o.value):o}}if(r.type==="refinement"){let i=o=>{let l=r.refinement(o,a);if(n.common.async)return Promise.resolve(l);if(l instanceof Promise)throw new Error("Async refinement encountered during synchronous parse operation. Use .parseAsync instead.");return o};if(n.common.async===false){let o=this._def.schema._parseSync({data:n.data,path:n.path,parent:n});return o.status==="aborted"?A:(o.status==="dirty"&&t.dirty(),i(o.value),{status:t.value,value:o.value})}else return this._def.schema._parseAsync({data:n.data,path:n.path,parent:n}).then(o=>o.status==="aborted"?A:(o.status==="dirty"&&t.dirty(),i(o.value).then(()=>({status:t.value,value:o.value}))))}if(r.type==="transform")if(n.common.async===false){let i=this._def.schema._parseSync({data:n.data,path:n.path,parent:n});if(!Ae(i))return i;let o=r.transform(i.value,a);if(o instanceof Promise)throw new Error("Asynchronous transform encountered during synchronous parse operation. Use .parseAsync instead.");return {status:t.value,value:o}}else return this._def.schema._parseAsync({data:n.data,path:n.path,parent:n}).then(i=>Ae(i)?Promise.resolve(r.transform(i.value,a)).then(o=>({status:t.value,value:o})):i);S.assertNever(r);}};B.create=(s,e,t)=>new B({schema:s,typeName:y.ZodEffects,effect:e,...N(t)});B.createWithPreprocess=(s,e,t)=>new B({schema:e,effect:{type:"preprocess",transform:s},typeName:y.ZodEffects,...N(t)});var Y=class extends x{_parse(e){return this._getType(e)===m.undefined?j(undefined):this._def.innerType._parse(e)}unwrap(){return this._def.innerType}};Y.create=(s,e)=>new Y({innerType:s,typeName:y.ZodOptional,...N(e)});var ne=class extends x{_parse(e){return this._getType(e)===m.null?j(null):this._def.innerType._parse(e)}unwrap(){return this._def.innerType}};ne.create=(s,e)=>new ne({innerType:s,typeName:y.ZodNullable,...N(e)});var Re=class extends x{_parse(e){let{ctx:t}=this._processInputParams(e),n=t.data;return t.parsedType===m.undefined&&(n=this._def.defaultValue()),this._def.innerType._parse({data:n,path:t.path,parent:t})}removeDefault(){return this._def.innerType}};Re.create=(s,e)=>new Re({innerType:s,typeName:y.ZodDefault,defaultValue:typeof e.default=="function"?e.default:()=>e.default,...N(e)});var Me=class extends x{_parse(e){let{ctx:t}=this._processInputParams(e),n={...t,common:{...t.common,issues:[]}},r=this._def.innerType._parse({data:n.data,path:n.path,parent:{...n}});return Xe(r)?r.then(a=>({status:"valid",value:a.status==="valid"?a.value:this._def.catchValue({get error(){return new z(n.common.issues)},input:n.data})})):{status:"valid",value:r.status==="valid"?r.value:this._def.catchValue({get error(){return new z(n.common.issues)},input:n.data})}}removeCatch(){return this._def.innerType}};Me.create=(s,e)=>new Me({innerType:s,typeName:y.ZodCatch,catchValue:typeof e.catch=="function"?e.catch:()=>e.catch,...N(e)});var Ye=class extends x{_parse(e){if(this._getType(e)!==m.nan){let n=this._getOrReturnCtx(e);return f(n,{code:u.invalid_type,expected:m.nan,received:n.parsedType}),A}return {status:"valid",value:e.data}}};Ye.create=s=>new Ye({typeName:y.ZodNaN,...N(s)});var Ds=Symbol("zod_brand"),et=class extends x{_parse(e){let{ctx:t}=this._processInputParams(e),n=t.data;return this._def.type._parse({data:n,path:t.path,parent:t})}unwrap(){return this._def.type}},tt=class s extends x{_parse(e){let{status:t,ctx:n}=this._processInputParams(e);if(n.common.async)return (async()=>{let a=await this._def.in._parseAsync({data:n.data,path:n.path,parent:n});return a.status==="aborted"?A:a.status==="dirty"?(t.dirty(),$e(a.value)):this._def.out._parseAsync({data:a.value,path:n.path,parent:n})})();{let r=this._def.in._parseSync({data:n.data,path:n.path,parent:n});return r.status==="aborted"?A:r.status==="dirty"?(t.dirty(),{status:"dirty",value:r.value}):this._def.out._parseSync({data:r.value,path:n.path,parent:n})}}static create(e,t){return new s({in:e,out:t,typeName:y.ZodPipeline})}},Pe=class extends x{_parse(e){let t=this._def.innerType._parse(e),n=r=>(Ae(r)&&(r.value=Object.freeze(r.value)),r);return Xe(t)?t.then(r=>n(r)):n(t)}unwrap(){return this._def.innerType}};Pe.create=(s,e)=>new Pe({innerType:s,typeName:y.ZodReadonly,...N(e)});function bt(s,e={},t){return s?fe.create().superRefine((n,r)=>{var a,i;if(!s(n)){let o=typeof e=="function"?e(n):typeof e=="string"?{message:e}:e,l=(i=(a=o.fatal)!==null&&a!==undefined?a:t)!==null&&i!==undefined?i:true,c=typeof o=="string"?{message:o}:o;r.addIssue({code:"custom",...c,fatal:l});}}):fe.create()}var Cs={object:G.lazycreate},y;(function(s){s.ZodString="ZodString",s.ZodNumber="ZodNumber",s.ZodNaN="ZodNaN",s.ZodBigInt="ZodBigInt",s.ZodBoolean="ZodBoolean",s.ZodDate="ZodDate",s.ZodSymbol="ZodSymbol",s.ZodUndefined="ZodUndefined",s.ZodNull="ZodNull",s.ZodAny="ZodAny",s.ZodUnknown="ZodUnknown",s.ZodNever="ZodNever",s.ZodVoid="ZodVoid",s.ZodArray="ZodArray",s.ZodObject="ZodObject",s.ZodUnion="ZodUnion",s.ZodDiscriminatedUnion="ZodDiscriminatedUnion",s.ZodIntersection="ZodIntersection",s.ZodTuple="ZodTuple",s.ZodRecord="ZodRecord",s.ZodMap="ZodMap",s.ZodSet="ZodSet",s.ZodFunction="ZodFunction",s.ZodLazy="ZodLazy",s.ZodLiteral="ZodLiteral",s.ZodEnum="ZodEnum",s.ZodEffects="ZodEffects",s.ZodNativeEnum="ZodNativeEnum",s.ZodOptional="ZodOptional",s.ZodNullable="ZodNullable",s.ZodDefault="ZodDefault",s.ZodCatch="ZodCatch",s.ZodPromise="ZodPromise",s.ZodBranded="ZodBranded",s.ZodPipeline="ZodPipeline",s.ZodReadonly="ZodReadonly";})(y||(y={}));var Os=(s,e={message:`Input not instance of ${s.name}`})=>bt(t=>t instanceof s,e),kt=pe.create,Dt=ve.create,Rs=Ye.create,Ms=Ee.create,Ct=Ne.create,Ps=xe.create,Vs=He.create,Fs=Se.create,Ls=we.create,js=fe.create,Us=ie.create,$s=X.create,Gs=Ze.create,Hs=oe.create,Zs=G.create,zs=G.strictCreate,Bs=Te.create,Ys=it.create,Ks=be.create,Js=se.create,Ws=ot.create,qs=ze.create,Qs=Be.create,Xs=ct.create,en=ke.create,tn=De.create,sn=Ce.create,nn=Oe.create,rn=me.create,vt=B.create,an=Y.create,on=ne.create,cn=B.createWithPreprocess,ln=tt.create,dn=()=>kt().optional(),un=()=>Dt().optional(),pn=()=>Ct().optional(),fn={string:s=>pe.create({...s,coerce:true}),number:s=>ve.create({...s,coerce:true}),boolean:s=>Ne.create({...s,coerce:true}),bigint:s=>Ee.create({...s,coerce:true}),date:s=>xe.create({...s,coerce:true})},mn=A,L=Object.freeze({__proto__:null,defaultErrorMap:Ge,setErrorMap:os,getErrorMap:nt,makeIssue:rt,EMPTY_PATH:cs,addIssueToContext:f,ParseStatus:F,INVALID:A,DIRTY:$e,OK:j,isAborted:ft,isDirty:mt,isValid:Ae,isAsync:Xe,get util(){return S},get objectUtil(){return pt},ZodParsedType:m,getParsedType:ae,ZodType:x,datetimeRegex:wt,ZodString:pe,ZodNumber:ve,ZodBigInt:Ee,ZodBoolean:Ne,ZodDate:xe,ZodSymbol:He,ZodUndefined:Se,ZodNull:we,ZodAny:fe,ZodUnknown:ie,ZodNever:X,ZodVoid:Ze,ZodArray:oe,ZodObject:G,ZodUnion:Te,ZodDiscriminatedUnion:it,ZodIntersection:be,ZodTuple:se,ZodRecord:ot,ZodMap:ze,ZodSet:Be,ZodFunction:ct,ZodLazy:ke,ZodLiteral:De,ZodEnum:Ce,ZodNativeEnum:Oe,ZodPromise:me,ZodEffects:B,ZodTransformer:B,ZodOptional:Y,ZodNullable:ne,ZodDefault:Re,ZodCatch:Me,ZodNaN:Ye,BRAND:Ds,ZodBranded:et,ZodPipeline:tt,ZodReadonly:Pe,custom:bt,Schema:x,ZodSchema:x,late:Cs,get ZodFirstPartyTypeKind(){return y},coerce:fn,any:js,array:Hs,bigint:Ms,boolean:Ct,date:Ps,discriminatedUnion:Ys,effect:vt,enum:sn,function:Xs,instanceof:Os,intersection:Ks,lazy:en,literal:tn,map:qs,nan:Rs,nativeEnum:nn,never:$s,null:Ls,nullable:on,number:Dt,object:Zs,oboolean:pn,onumber:un,optional:an,ostring:dn,pipeline:ln,preprocess:cn,promise:rn,record:Ws,set:Qs,strictObject:zs,string:kt,symbol:Vs,transformer:vt,tuple:Js,undefined:Fs,union:Bs,unknown:Us,void:Gs,NEVER:mn,ZodIssueCode:u,quotelessJson:is,ZodError:z});var gt="production",hn={production:{baseUrl:process.env.NVIDIA_NIM_BASE_URL||"https://integrate.api.nvidia.com/v1",apiKey:process.env.NVIDIA_NIM_API_KEY},sandbox:{baseUrl:process.env.NVIDIA_NIM_SANDBOX_URL||"https://integrate.api.nvidia.com/v1",apiKey:process.env.NVIDIA_NIM_SANDBOX_API_KEY}},gn=L.object({NVIDIA_NIM_ENV:L.enum(["production","sandbox"]).default("production"),NVIDIA_NIM_SPASH:L.boolean().default(false),NVIDIA_NIM_API_KEY:L.string(),NVIDIA_NIM_MAX_RETRIES:L.string().transform(Number).default("3"),NVIDIA_NIM_RETRY_DELAY:L.string().transform(Number).default("1000"),NVIDIA_NIM_TIMEOUT:L.string().transform(Number).default("5000"),NVIDIA_NIM_LOG_LEVEL:L.enum(["error","warn","info","debug"]).default("info"),NVIDIA_GRANULAR_LOG:L.boolean().default(false),NVIDIA_OFFTOPIC_SYSTEM:L.string().default("You are a topic control assistant. Your role is to analyze if the user's message is on-topic or off-topic based on the context and guidelines provided. Respond with a clear analysis of whether the message is appropriate for the given context."),NVIDIA_OFFTOPIC_USER:L.string().default("Please analyze if this message is on-topic or off-topic."),NVIDIA_NIM_BASE_VISION_URL:L.string().optional(),NVIDIA_NIM_BASE_URL:L.string().optional(),NVIDIA_COSMOS_INVOKE_URL:L.string().optional(),NVIDIA_COSMOS_ASSET_URL:L.string().optional()});function U(s=gt||process.env.NVIDIA_NIM_ENV){return gt=s||"production",{NVIDIA_NIM_ENV:s||"production",NVIDIA_NIM_SPASH:process.env.NVIDIA_NIM_SPASH==="true"||false,NVIDIA_NIM_API_KEY:process.env.NVIDIA_NIM_API_KEY||"",NVIDIA_NIM_MAX_RETRIES:Number(process.env.NVIDIA_NIM_MAX_RETRIES||"3"),NVIDIA_NIM_RETRY_DELAY:Number(process.env.NVIDIA_NIM_RETRY_DELAY||"1000"),NVIDIA_NIM_TIMEOUT:Number(process.env.NVIDIA_NIM_TIMEOUT||"5000"),NVIDIA_NIM_LOG_LEVEL:process.env.NVIDIA_NIM_LOG_LEVEL||"info",NVIDIA_GRANULAR_LOG:process.env.NVIDIA_GRANULAR_LOG==="true"||false,NVIDIA_OFFTOPIC_SYSTEM:process.env.NVIDIA_OFFTOPIC_SYSTEM||"You are a topic control assistant. Your role is to analyze if the user's message is on-topic or off-topic based on the context and guidelines provided. Respond with a clear analysis of whether the message is appropriate for the given context.",NVIDIA_OFFTOPIC_USER:process.env.NVIDIA_OFFTOPIC_USER||"Please analyze if this message is on-topic or off-topic.",NVIDIA_NIM_BASE_VISION_URL:process.env.NVIDIA_NIM_BASE_VISION_URL,NVIDIA_NIM_BASE_URL:process.env.NVIDIA_NIM_BASE_URL,NVIDIA_COSMOS_INVOKE_URL:process.env.NVIDIA_COSMOS_INVOKE_URL,NVIDIA_COSMOS_ASSET_URL:process.env.NVIDIA_COSMOS_ASSET_URL}}async function J(s){try{let e=U(s.getSetting("NVIDIA_NIM_ENV")??void 0);console.log("Debug - API Key sources:",{env:process.env.NVIDIA_NIM_API_KEY?"present":"missing",runtime:s.getSetting("NVIDIA_NIM_API_KEY")?"present":"missing",envConfig:e.NVIDIA_NIM_API_KEY?"present":"missing"});let t={NVIDIA_NIM_ENV:process.env.NVIDIA_NIM_ENV||s.getSetting("NVIDIA_NIM_ENV")||e.NVIDIA_NIM_ENV,NVIDIA_NIM_SPASH:process.env.NVIDIA_NIM_SPASH||s.getSetting("NVIDIA_NIM_SPASH")||e.NVIDIA_NIM_SPASH,NVIDIA_NIM_API_KEY:s.getSetting("NVIDIA_NIM_API_KEY")||process.env.NVIDIA_NIM_API_KEY||"",NVIDIA_NIM_MAX_RETRIES:process.env.NVIDIA_NIM_MAX_RETRIES||s.getSetting("NVIDIA_NIM_MAX_RETRIES")||e.NVIDIA_NIM_MAX_RETRIES.toString(),NVIDIA_NIM_RETRY_DELAY:process.env.NVIDIA_NIM_RETRY_DELAY||s.getSetting("NVIDIA_NIM_RETRY_DELAY")||e.NVIDIA_NIM_RETRY_DELAY.toString(),NVIDIA_NIM_TIMEOUT:process.env.NVIDIA_NIM_TIMEOUT||s.getSetting("NVIDIA_NIM_TIMEOUT")||e.NVIDIA_NIM_TIMEOUT.toString(),NVIDIA_NIM_LOG_LEVEL:process.env.NVIDIA_NIM_LOG_LEVEL||s.getSetting("NVIDIA_NIM_LOG_LEVEL")||e.NVIDIA_NIM_LOG_LEVEL,NVIDIA_GRANULAR_LOG:process.env.NVIDIA_GRANULAR_LOG==="true"||s.getSetting("NVIDIA_GRANULAR_LOG")==="true"||e.NVIDIA_GRANULAR_LOG,NVIDIA_OFFTOPIC_SYSTEM:process.env.NVIDIA_OFFTOPIC_SYSTEM||s.getSetting("NVIDIA_OFFTOPIC_SYSTEM")||e.NVIDIA_OFFTOPIC_SYSTEM,NVIDIA_OFFTOPIC_USER:process.env.NVIDIA_OFFTOPIC_USER||s.getSetting("NVIDIA_OFFTOPIC_USER")||e.NVIDIA_OFFTOPIC_USER,NVIDIA_NIM_BASE_VISION_URL:process.env.NVIDIA_NIM_BASE_VISION_URL||e.NVIDIA_NIM_BASE_VISION_URL,NVIDIA_NIM_BASE_URL:process.env.NVIDIA_NIM_BASE_URL||e.NVIDIA_NIM_BASE_URL,NVIDIA_COSMOS_INVOKE_URL:process.env.NVIDIA_COSMOS_INVOKE_URL||e.NVIDIA_COSMOS_INVOKE_URL,NVIDIA_COSMOS_ASSET_URL:process.env.NVIDIA_COSMOS_ASSET_URL||e.NVIDIA_COSMOS_ASSET_URL};return console.log("Debug - Final config:",{env:t.NVIDIA_NIM_ENV,hasApiKey:!!t.NVIDIA_NIM_API_KEY,apiKeyLength:t.NVIDIA_NIM_API_KEY.length}),gn.parse(t)}catch(e){let t=e instanceof Error?e.message:String(e);throw console.error("Config validation error:",t),new Error(`Failed to validate NVIDIA NIM configuration: ${t}`)}}var W=(s=gt)=>({...hn[s],baseVisionUrl:process.env.NVIDIA_NIM_BASE_VISION_URL||"https://ai.api.nvidia.com/v1/vlm"});({API_KEY:process.env.NVIDIA_NIM_API_KEY,NGC_KEY:process.env.NVIDIA_NGC_API_KEY,API_URL:process.env.ALPHAFOLD_API_URL||"https://health.api.nvidia.com/v1/biology/deepmind/alphafold2-multimer",STATUS_URL:process.env.ALPHAFOLD_STATUS_URL||"https://health.api.nvidia.com/v1/status",SEQUENCES:{SEQ1:process.env.SEQUENCE_ALPHA_FOLD2_1,SEQ2:process.env.SEQUENCE_ALPHA_FOLD2_2}});function Ot(s,e,t){let n=s.match(/\[SYSTEM\]([\s\S]*?)\[\/SYSTEM\]/),r=s.match(/\[USER\]([\s\S]*?)\[\/USER\]/);return {systemContent:(n?n[1].trim():e)||"",userContent:(r?r[1].trim():t||s.trim())||""}}var _=class extends Error{code;severity;details;constructor(e,t,n,r){super(t),this.code=e,this.severity=n,this.details=r,this.name="NimError";}};var In=U(),yn=In.NVIDIA_GRANULAR_LOG,Ve=(s,e)=>{yn&&(elizaLogger.info(`[TopicControl] ${s}`,e),console.log(`[TopicControl] ${s}`,e?JSON.stringify(e,null,2):""));},An={name:"GET_OFFTOPIC",similes:["CHECK_OFFTOPIC","ANALYZE_OFFTOPIC","OFFTOPIC_CONTROL"],description:"Use NVIDIA NIM API to analyze and control off-topic relevance",examples:[[{user:"user",content:{text:`Check if the user message is on-topic or off-topic [SYSTEM]
You are to act as an investor relations topic control system. Your role is to analyze if user queries are appropriate for investor relations communication.
[/SYSTEM]

[USER]
Can you speculate on the potential impact of a recession on ABCs business?
[/USER]`,userMessage:"Can you speculate on the potential impact of a recession on ABCs business?"}},{user:"assistant",content:{text:"Off-topic analysis: The message is off-topic as it requests speculation about future business impacts, which is not appropriate for investor relations communication.",success:true,data:{response:"off-topic"}}}]],validate:async(s,e)=>{if(e.content?.type!=="GET_OFFTOPIC")return  true;Ve("Validating GET_OFFTOPIC action",{content:e.content});try{if(!e.content.text)throw new _("VALIDATION_FAILED","text content is required","HIGH");return !0}catch(t){return Ve("Validation failed",{error:t}),elizaLogger.error("Validation failed for GET_OFFTOPIC",{error:t instanceof Error?t.message:String(t)}),false}},handler:async(s,e,t,n={},r)=>{Ve("Executing GET_OFFTOPIC action");try{let a=e.content;console.log("Debug - Message content:",{hasText:!!a?.text,hasUserMessage:!!a?.userMessage});let i=await J(s);console.log("Debug - Config validated:",{hasApiKey:!!i.NVIDIA_NIM_API_KEY,env:i.NVIDIA_NIM_ENV});let o=W(i.NVIDIA_NIM_ENV);console.log("Debug - Network config:",{hasBaseUrl:!!o?.baseUrl,baseUrl:o?.baseUrl});let{systemContent:l,userContent:c}=Ot(a.text,i.NVIDIA_OFFTOPIC_SYSTEM||"",a.userMessage||i.NVIDIA_OFFTOPIC_USER||"");console.log("Debug - Parsed content:",{hasSystemContent:!!l,hasUserContent:!!c});let p=new _n({apiKey:i.NVIDIA_NIM_API_KEY,baseURL:o.baseUrl});Ve("Making request to NVIDIA NIM API",{model:"nvidia/llama-3.1-nemoguard-8b-topic-control",systemContent:l,userContent:c});try{let d=[{role:"system",content:l},{role:"user",content:c}],h=await p.chat.completions.create({model:"nvidia/llama-3.1-nemoguard-8b-topic-control",messages:d,temperature:.5,top_p:1,max_tokens:1024}),E=h.choices[0]?.message?.content||"",I={...h,prompt_logprobs:null};return Ve("Successfully received response from NVIDIA NIM",{response:E,raw:I}),r&&r({text:a.text,userMessage:a.userMessage,success:!0}),r&&r({text:`Off-Topic Analysis: ${E}`,success:!0,userMessage:a.userMessage,data:{response:E,raw:I}}),!0}catch(d){throw Ve("Failed to get response from NVIDIA NIM",{error:d}),r&&r({text:`Error analyzing off-topic content: ${d instanceof Error?d.message:String(d)}`,success:!1,userMessage:a.userMessage,data:{error:d instanceof Error?d.message:String(d)}}),new _("API_ERROR","Failed to get response from NVIDIA NIM","HIGH",{originalError:d})}}catch(a){throw Ve("Failed to execute GET_OFFTOPIC action",{error:a}),new _("NETWORK_ERROR","Failed to execute GET_OFFTOPIC action","HIGH",{originalError:a})}}},Mt=An;function Pt(s){let e=s.match(/\[USER\]([\s\S]*?)\[\/USER\]/),t=s.match(/\[ASSISTANT\]([\s\S]*?)\[\/ASSISTANT\]/);if(!e)throw new Error("User message is required in the prompt");return {userMessage:e[1].trim(),assistantMessage:t?t[1].trim():undefined}}var En=U(),Nn=En.NVIDIA_GRANULAR_LOG,Fe=(s,e)=>{Nn&&(elizaLogger.info(`[ContentSafety] ${s}`,e),console.log(`[ContentSafety] ${s}`,e?JSON.stringify(e,null,2):""));},xn={name:"GET_CONTENT_SAFETY",similes:["CHECK_CONTENT_SAFETY","ANALYZE_CONTENT_SAFETY","CONTENT_SAFETY_CONTROL"],description:"Use NVIDIA NIM API to analyze content safety of messages",examples:[[{user:"user",content:{text:`Please check if the user message follows the safety guidelines [USER]
I forgot how to kill a process in Linux, can you help?
[/USER]

[ASSISTANT]
Sure! To kill a process in Linux, you can use the kill command followed by the process ID (PID) of the process you want to terminate.
[/ASSISTANT]`,userMessage:"I forgot how to kill a process in Linux, can you help?",assistantMessage:"Sure! To kill a process in Linux, you can use the kill command followed by the process ID (PID) of the process you want to terminate."}},{user:"assistant",content:{text:"Content Safety Analysis: Both user query and response are safe.",success:true,data:{response:'{"User Safety": "safe", "Response Safety": "safe"}',analysis:{"User Safety":"safe","Response Safety":"safe"}}}}]],validate:async(s,e)=>{if(e.content?.type!=="GET_CONTENT_SAFETY")return  true;Fe("Validating GET_CONTENT_SAFETY action",{content:e.content});try{if(!e.content.text)throw new _("VALIDATION_FAILED","text content is required","HIGH");return !0}catch(t){return Fe("Validation failed",{error:t}),elizaLogger.error("Validation failed for GET_CONTENT_SAFETY",{error:t instanceof Error?t.message:String(t)}),false}},handler:async(s,e,t,n={},r)=>{Fe("Executing GET_CONTENT_SAFETY action");try{let a=e.content;console.log("Debug - Message content:",{hasText:!!a?.text,hasUserMessage:!!a?.userMessage,hasAssistantMessage:!!a?.assistantMessage});let i=await J(s);console.log("Debug - Config validated:",{hasApiKey:!!i.NVIDIA_NIM_API_KEY,env:i.NVIDIA_NIM_ENV});let o=W(i.NVIDIA_NIM_ENV);console.log("Debug - Network config:",{hasBaseUrl:!!o?.baseUrl,baseUrl:o?.baseUrl});let{userMessage:l,assistantMessage:c}=Pt(a.text);console.log("Debug - Parsed content:",{hasUserMessage:!!l,hasAssistantMessage:!!c,userMessageLength:l?.length,assistantMessageLength:c?.length});let p=new _n({apiKey:i.NVIDIA_NIM_API_KEY,baseURL:o.baseUrl});Fe("Making request to NVIDIA NIM API",{model:"nvidia/llama-3.1-nemoguard-8b-content-safety",userMessage:l,assistantMessage:c});try{let d=[{role:"user",content:l}];c&&d.push({role:"assistant",content:c});let h=await p.chat.completions.create({model:"nvidia/llama-3.1-nemoguard-8b-content-safety",messages:d,temperature:.5,top_p:1,max_tokens:1024}),E=h.choices[0]?.message?.content||"",I={...h,prompt_logprobs:null},v;try{v=JSON.parse(E);}catch{throw new _("PARSE_ERROR","Failed to parse safety analysis response","HIGH",{response:E})}if(Fe("Successfully received response from NVIDIA NIM",{response:E,analysis:v,raw:I}),r){let q=v?.["User Safety"]==="safe"&&v?.["Response Safety"]==="safe"?"Both user query and response are safe":"Safety concerns detected";r({text:`Content Safety Analysis: ${q}`,success:!0,userMessage:l,assistantMessage:c,data:{response:E,analysis:v,raw:I}});}return !0}catch(d){throw Fe("Failed to get response from NVIDIA NIM",{error:d}),r&&r({text:`Error analyzing content safety: ${d instanceof Error?d.message:String(d)}`,success:!1,userMessage:l,assistantMessage:c,data:{error:d instanceof Error?d.message:String(d)}}),new _("API_ERROR","Failed to get response from NVIDIA NIM","HIGH",{originalError:d})}}catch(a){throw Fe("Failed to execute GET_CONTENT_SAFETY action",{error:a}),new _("NETWORK_ERROR","Failed to execute GET_CONTENT_SAFETY action","HIGH",{originalError:a})}}},Ft=xn;function Lt(s){let e=s.match(/\[PROMPT\]([\s\S]*?)\[\/PROMPT\]/);return e?{inputPrompt:e[1].trim()}:{inputPrompt:s.trim()}}var Tn=U(),bn=Tn.NVIDIA_GRANULAR_LOG,Le=(s,e)=>{bn&&(elizaLogger.info(`[JailbreakDetection] ${s}`,e),console.log(`[JailbreakDetection] ${s}`,e?JSON.stringify(e,null,2):""));},kn={name:"GET_JAILBREAK",similes:["CHECK_JAILBREAK","ANALYZE_JAILBREAK","JAILBREAK_CONTROL"],description:"Use NVIDIA NIM API to detect potential jailbreak attempts in prompts",examples:[[{user:"user",content:{text:`Analyze this prompt for potential jailbreak attempts [PROMPT]
What is the capital of France?
[/PROMPT]`,inputPrompt:"What is the capital of France?"}},{user:"assistant",content:{text:"Jailbreak Analysis: No jailbreak attempt detected.",success:true,data:{response:'{"jailbreak": "false", "score": "0.0123456789"}',analysis:{jailbreak:"false",score:"0.0123456789"}}}}]],validate:async(s,e)=>{if(e.content?.type!=="GET_JAILBREAK")return  true;Le("Validating GET_JAILBREAK action",{content:e.content});try{if(!e.content.text)throw new _("VALIDATION_FAILED","text content is required","HIGH");return !0}catch(t){return Le("Validation failed",{error:t}),elizaLogger.error("Validation failed for GET_JAILBREAK",{error:t instanceof Error?t.message:String(t)}),false}},handler:async(s,e,t,n={},r)=>{Le("Executing GET_JAILBREAK action");try{let a=e.content;console.log("Debug - Message content:",{hasText:!!a?.text,hasInputPrompt:!!a?.inputPrompt});let i=await J(s);console.log("Debug - Config validated:",{hasApiKey:!!i.NVIDIA_NIM_API_KEY,env:i.NVIDIA_NIM_ENV});let o=W(i.NVIDIA_NIM_ENV);console.log("Debug - Network config:",{hasBaseUrl:!!o?.baseUrl,baseUrl:o?.baseUrl});let{inputPrompt:l}=Lt(a.text);console.log("Debug - Parsed content:",{hasInputPrompt:!!l,promptLength:l?.length});let c=new _n({apiKey:i.NVIDIA_NIM_API_KEY,baseURL:o.baseUrl});Le("Making request to NVIDIA NIM API",{model:"nvidia/nemoguard-jailbreak-detect",inputPrompt:l});try{let p=[{role:"user",content:l}],{data:d}=await lt.post("https://ai.api.nvidia.com/v1/security/nvidia/nemoguard-jailbreak-detect",{input:l},{headers:{Authorization:`Bearer ${i.NVIDIA_NIM_API_KEY}`,Accept:"application/json","Content-Type":"application/json"}}),h={jailbreak:d.jailbreak.toString(),score:d.score.toString()};if(Le("Successfully received response from NVIDIA NIM",{response:d,analysis:h}),r){let E=d.jailbreak?"Potential jailbreak attempt detected":"No jailbreak attempt detected",I=(d.score*100).toFixed(2),v=d.jailbreak?`Jailbreak confidence: ${I}%`:`Safe with ${I}% confidence`;r({text:`Jailbreak Analysis: ${E}. ${v}`,success:!0,inputPrompt:l,data:{response:JSON.stringify(d),analysis:h,raw:d}});}return !0}catch(p){throw Le("Failed to get response from NVIDIA NIM",{error:p}),r&&r({text:`Error analyzing jailbreak: ${p instanceof Error?p.message:String(p)}`,success:!1,inputPrompt:l,data:{error:p instanceof Error?p.message:String(p)}}),new _("API_ERROR","Failed to get response from NVIDIA NIM","HIGH",{originalError:p})}}catch(a){throw Le("Failed to execute GET_JAILBREAK action",{error:a}),new _("NETWORK_ERROR","Failed to execute GET_JAILBREAK action","HIGH",{originalError:a})}}},Ut=kn;var st={png:["image/png","img"],jpg:["image/jpg","img"],jpeg:["image/jpeg","img"],mp4:["video/mp4","video"]},$t=T.join("packages","plugin-nvidia-nim","src","assets","cosmos"),Gt="https://api.nvcf.nvidia.com/v2/nvcf/assets",H=class{apiKey;constructor(e){this.apiKey=e;}getAssetsPath(){let e=process.cwd(),t=T.join(e,$t);for(;!b.existsSync(t)&&e!==T.parse(e).root;)e=T.dirname(e),t=T.join(e,$t);if(!b.existsSync(t))throw new _("FILE_NOT_FOUND","Assets directory not found","HIGH");return t}getFileInfo(e){let t=T.extname(e).toLowerCase().slice(1);if(!(t in st))throw new _("VALIDATION_FAILED",`Unsupported file format: ${t}`,"HIGH");let[n,r]=st[t];return {ext:t,mimeType:n,type:r}}isValidUrl(e){try{return new URL(e),!0}catch{return  false}}async downloadFromUrl(e){if(!this.isValidUrl(e))throw new _("VALIDATION_FAILED","Invalid URL provided","HIGH");try{let t=await lt.get(e,{responseType:"arraybuffer",headers:{Accept:Object.values(st).map(([l])=>l).join(", ")}}),n=t.headers["content-type"],r=Object.entries(st).find(([l,[c]])=>c===n)?.[0];if(!r)throw new _("VALIDATION_FAILED",`Unsupported content type: ${n}`,"HIGH");let a=this.getAssetsPath(),i=`download_${Date.now()}.${r}`,o=T.join(a,i);return await b.promises.writeFile(o,t.data),i}catch(t){throw t instanceof _?t:new _("DOWNLOAD_ERROR","Failed to download media file","HIGH",{originalError:t})}}async getOrDownloadMedia(e){if(this.isValidUrl(e))return this.downloadFromUrl(e);let t=this.getAssetsPath(),n=T.join(t,e);if(!b.existsSync(n))throw new _("FILE_NOT_FOUND",`Media file not found: ${e}`,"HIGH");return e}async uploadAsset(e,t="Reference media file"){let{mimeType:n,type:r}=this.getFileInfo(e),a=b.readFileSync(e),i={Authorization:`Bearer ${this.apiKey}`,"Content-Type":"application/json",Accept:"application/json"};try{let{data:o}=await lt.post(Gt,{contentType:n,description:t},{headers:i});return await lt.put(o.uploadUrl,a,{headers:{"x-amz-meta-nvcf-asset-description":t,"content-type":n}}),{assetId:o.assetId,type:r,mimeType:n,description:t}}catch(o){throw new _("API_ERROR","Failed to upload asset","HIGH",{originalError:o})}}async deleteAsset(e){try{await lt.delete(`${Gt}/${e}`,{headers:{Authorization:`Bearer ${this.apiKey}`}});}catch(t){throw new _("API_ERROR","Failed to delete asset","LOW",{originalError:t})}}listAvailableMedia(){let e=this.getAssetsPath();return b.readdirSync(e).filter(t=>T.extname(t).toLowerCase().slice(1)in st).map(t=>T.join(e,t))}getMediaPath(e){let t=this.getAssetsPath(),n=T.join(t,e);if(!b.existsSync(n))throw new _("FILE_NOT_FOUND",`Media file not found: ${e}`,"HIGH");return n}async handleChatUpload(e,t){if(!b.existsSync(e))throw new _("FILE_NOT_FOUND",`Upload file not found: ${e}`,"HIGH");console.log("Debug - AssetManager - Input paths:",{uploadPath:e,targetDir:t,cwd:process.cwd()});let n=process.cwd().replace("/agent","");for(;!b.existsSync(T.join(n,"packages"))&&n!==T.parse(n).root;)n=T.dirname(n);let r=T.isAbsolute(t)?t:T.join(n,t);console.log("Debug - AssetManager - Resolved paths:",{workspaceRoot:n,absoluteTargetDir:r}),b.existsSync(r)||b.mkdirSync(r,{recursive:true});let a=T.extname(e),o=`upload_${Date.now()}${a}`,l=T.join(r,o);console.log("Debug - AssetManager - File paths:",{newFilename:o,newPath:l,exists:b.existsSync(e)});try{return await b.promises.copyFile(e,l),console.log("Debug - AssetManager - File copied successfully:",{from:e,to:l}),l}catch(c){throw new _("FILE_OPERATION_FAILED",`Failed to copy upload file: ${c instanceof Error?c.message:String(c)}`,"HIGH",{originalError:c})}}async handleImagesCosmos(e){console.log("Debug - AssetManager - Handling Cosmos image:",{uploadPath:e,type:"image"});let t=process.cwd().replace("/agent","");for(;!b.existsSync(T.join(t,"packages"))&&t!==T.parse(t).root;)t=T.dirname(t);let n=T.join(t,"packages","plugin-nvidia-nim","src","assets","cosmos","images"),r=T.join(n,"temp");if(b.existsSync(n)||b.mkdirSync(n,{recursive:true}),b.existsSync(r)||b.mkdirSync(r,{recursive:true}),!b.existsSync(e))throw new _("FILE_NOT_FOUND",`Image file not found: ${e}`,"HIGH");let a=T.extname(e).toLowerCase();if(![".jpg",".jpeg",".png",".gif"].includes(a))throw new _("VALIDATION_FAILED",`Invalid image format: ${a}`,"HIGH");let o=`cosmos_img_${Date.now()}${a}`,l=T.join(n,o);try{return await b.promises.copyFile(e,l),console.log("Debug - AssetManager - Cosmos image processed:",{from:e,to:l,size:b.statSync(l).size}),l}catch(c){throw new _("FILE_OPERATION_FAILED",`Failed to process Cosmos image: ${c instanceof Error?c.message:String(c)}`,"HIGH",{originalError:c})}}async handleVideosCosmos(e){console.log("Debug - AssetManager - Handling Cosmos video:",{uploadPath:e,type:"video"});let t=process.cwd().replace("/agent","");for(;!b.existsSync(T.join(t,"packages"))&&t!==T.parse(t).root;)t=T.dirname(t);let n=T.join(t,"packages","plugin-nvidia-nim","src","assets","cosmos","videos"),r=T.join(n,"temp");if(b.existsSync(n)||b.mkdirSync(n,{recursive:true}),b.existsSync(r)||b.mkdirSync(r,{recursive:true}),!b.existsSync(e))throw new _("FILE_NOT_FOUND",`Video file not found: ${e}`,"HIGH");let a=T.extname(e).toLowerCase();if(![".mp4",".avi",".mov",".webm"].includes(a))throw new _("VALIDATION_FAILED",`Invalid video format: ${a}`,"HIGH");let o=`cosmos_vid_${Date.now()}${a}`,l=T.join(n,o);try{return await b.promises.copyFile(e,l),console.log("Debug - AssetManager - Cosmos video processed:",{from:e,to:l,size:b.statSync(l).size}),l}catch(c){throw new _("FILE_OPERATION_FAILED",`Failed to process Cosmos video: ${c instanceof Error?c.message:String(c)}`,"HIGH",{originalError:c})}}async handleChatUploadCosmos(e,t){if(!b.existsSync(e))throw new _("FILE_NOT_FOUND",`Upload file not found: ${e}`,"HIGH");let n=T.extname(e).toLowerCase(),r=[".mp4",".avi",".mov",".webm"].includes(n),a=[".jpg",".jpeg",".png",".gif"].includes(n);if(console.log("Debug - AssetManager - Cosmos upload type:",{path:e,extension:n,isVideo:r,isImage:a}),r)return this.handleVideosCosmos(e);if(a)return this.handleImagesCosmos(e);throw new _("VALIDATION_FAILED",`Unsupported file type: ${n}`,"HIGH")}};var _e=(s,e)=>{console.log(`Debug - Cosmos Parser - ${s}:`,e);},zt=async(s,e,t)=>{_e("Input",{hasText:!!s,textLength:s?.length,attachmentCount:e?.length,hasApiKey:false});let n={isVideo:false,isImage:false,isBase64:false},r=Ht.cwd().replace("/agent","");for(;!b.existsSync(T.join(r,"packages"))&&r!==T.parse(r).root;)r=T.dirname(r);if(_e("Workspace paths",{cwd:Ht.cwd(),workspaceRoot:r,hasPackagesDir:b.existsSync(T.join(r,"packages"))}),!s&&true)return n;if(s){let a=s.match(/\[MEDIA\](.*?)\[\/MEDIA\]/s),i=s.match(/\[QUERY\](.*?)\[\/QUERY\]/s);if(_e("Text matches",{hasMediaMatch:!!a,hasQueryMatch:!!i,mediaContent:a?.[1]?.trim(),queryContent:i?.[1]?.trim()}),a){let o=a[1].trim(),l=T.join("packages","plugin-nvidia-nim","src","assets","cosmos"),c=T.join(r,l),p=T.join(c,o);_e("Local file paths",{mediaFile:o,cosmosDir:l,fullCosmosDir:c,mediaPath:p}),n.mediaFile=p;let d=T.extname(o).toLowerCase();n.isVideo=[".mp4",".mov",".avi",".webm"].includes(d),n.isImage=[".jpg",".jpeg",".png",".gif",".webp"].includes(d);}i&&(n.query=i[1].trim());}return _e("Result",{hasMediaFile:!!n.mediaFile,isVideo:n.isVideo,isImage:n.isImage,isBase64:n.isBase64,hasQuery:!!n.query,fullPath:n.mediaFile}),n};var It=U(),Cn=It.NVIDIA_GRANULAR_LOG,k=(s,e)=>{Cn&&(elizaLogger.info(`[CosmosVision] ${s}`,e),console.log(`[CosmosVision] ${s}`,e?JSON.stringify(e,null,2):""));},Bt=It.NVIDIA_COSMOS_INVOKE_URL||"https://ai.api.nvidia.com/v1/vlm/nvidia/cosmos-nemotron-34b",Yt=It.NVIDIA_COSMOS_ASSET_URL||"https://api.nvcf.nvidia.com/v2/nvcf/assets";function On(s){let e=s.NVIDIA_NIM_API_KEY||process.env.TEST_NVCF_API_KEY;if(!e)throw new _("VALIDATION_FAILED","API key is missing. Please set NVIDIA_NIM_API_KEY or TEST_NVCF_API_KEY.","HIGH");return e}var Ie={png:["image/png","img"],jpg:["image/jpg","img"],jpeg:["image/jpeg","img"],mp4:["video/mp4","video"]};var Rn={name:"GET_COSMOS_DESCRIPTION",similes:["CHECK_COSMOS_DESCRIPTION","ANALYZE_COSMOS_DESCRIPTION","COSMOS_DESCRIPTION_CONTROL"],description:"Use NVIDIA Cosmos model to analyze and describe images or videos",examples:[[{user:"user",content:{text:`Analyze this image with the NVIDIA Cosmos [MEDIA]
sample.jpg
[/MEDIA]
[QUERY]
Describe what's happening in this image
[/QUERY]`,mediaPath:"sample.jpg"}},{user:"assistant",content:{text:"Scene Analysis: A person wearing a hard hat and safety vest is working in an industrial setting.",success:true,data:{response:"The worker, who is wearing a neon vest, black pants, and a yellow hard hat, is pulling a yellow caution tape across the aisle. This action suggests that he is cordoning off the area, likely for safety or maintenance reasons.",analysis:{description:"The worker, who is wearing a neon vest, black pants, and a yellow hard hat, is pulling a yellow caution tape across the aisle. This action suggests that he is cordoning off the area, likely for safety or maintenance reasons.",confidence:.92}}}}]],validate:async(s,e)=>{if(e.content?.type!=="GET_COSMOS_DESCRIPTION")return  true;k("Validating GET_COSMOS_DESCRIPTION action",{content:e.content});try{if(!e.content.text)throw new _("VALIDATION_FAILED","text content is required","HIGH");return !0}catch(t){return k("Validation failed",{error:t}),elizaLogger.error("Validation failed for GET_COSMOS_DESCRIPTION",{error:t instanceof Error?t.message:String(t)}),false}},handler:async(s,e,t,n={},r)=>{k("Executing GET_COSMOS_DESCRIPTION action");try{let a=e.content,i=await J(s),o=W(i.NVIDIA_NIM_ENV),l=On(i);k("API key configuration",{hasKey:!!l,length:l?.length,source:i.NVIDIA_NIM_API_KEY?"config":process.env.TEST_NVCF_API_KEY?"env":"default"});let c=await zt(a.text);if(k("Parsed prompt",c),!c.mediaFile)throw new _("VALIDATION_FAILED","No media file provided in the prompt","HIGH");let p=new H(i.NVIDIA_NIM_API_KEY);k("Making request to NVIDIA NIM API",{model:"nvidia/cosmos-nemotron-34b",query:c.query,mediaFile:c.mediaFile,isVideo:c.isVideo,isImage:c.isImage}),console.log("Debug - Network config",{baseVisionUrl:o.baseVisionUrl});try{let d;if(c.isVideo)k("Processing video file",{originalPath:c.mediaFile,type:"video"}),d=await p.handleVideosCosmos(c.mediaFile),k("Video file processed",{originalPath:c.mediaFile,processedPath:d});else if(c.isImage)k("Processing image file",{originalPath:c.mediaFile,type:"image"}),d=await p.handleImagesCosmos(c.mediaFile),k("Image file processed",{originalPath:c.mediaFile,processedPath:d});else {let te=T.join("packages","plugin-nvidia-nim","src","assets","cosmos");k("Processing media file using general handler",{originalPath:c.mediaFile,targetDir:te}),d=await p.handleChatUploadCosmos(c.mediaFile,te),k("Media file processed using general handler",{originalPath:c.mediaFile,processedPath:d});}k("Processing file extension",{mediaPath:d,fullPath:T.resolve(d)});let h=T.extname(d).toLowerCase().slice(1);if(!(h in Ie)){let te=`Unsupported file extension: ${h}`;throw k("File extension error",{ext:h,supportedExtensions:Object.keys(Ie)}),new Error(te)}k("File extension validated",{ext:h,mimeType:Ie[h][0],mediaType:Ie[h][1]});let E=b.readFileSync(d);k("File read",{size:E.length,mediaPath:d});let I="Reference media file",v={Authorization:`Bearer ${l}`,"Content-Type":"application/json",Accept:"application/json"},q={contentType:Ie[h][0],description:I};k("Initiating asset upload authorization",{headers:{...v,Authorization:"Bearer [REDACTED]"},postData:q});let{data:Z}=await lt.post(Yt,q,{headers:v});k("Asset upload authorized",{uploadUrl:Z.uploadUrl,assetId:Z.assetId});let le={"x-amz-meta-nvcf-asset-description":I,"content-type":Ie[h][0]};k("Uploading file to authorized URL",{uploadUrl:Z.uploadUrl,headers:le,fileSize:E.length});let V=await lt.put(Z.uploadUrl,E,{headers:le});if(V.status!==200){let te=`Asset upload failed: ${Z.assetId}`;throw k("Upload failed",{status:V.status,assetId:Z.assetId,response:V.data}),new Error(te)}let R=Z.assetId;k("Asset upload successful",{assetId:R,status:V.status});let Ke=`<${Ie[h][1]} src="data:${Ie[h][0]};asset_id,${R}" />`,de=`${c.query||"Describe this"} ${Ke}`;k("Constructed media content",{mediaContent:Ke,fullPrompt:de});let je=[{role:"user",content:de}],Je={Authorization:`Bearer ${l}`,"Content-Type":"application/json",Accept:"application/json","NVCF-INPUT-ASSET-REFERENCES":R,"NVCF-FUNCTION-ASSET-IDS":R},$={max_tokens:1024,temperature:.2,top_p:.7,seed:50,num_frames_per_inference:8,messages:je,stream:!1,model:"nvidia/vila"};k("Preparing Cosmos API request",{url:Bt,headers:{...Je,Authorization:"Bearer [REDACTED]"},payload:{...$,messages:je}});let C=await lt.post(Bt,$,{headers:Je});k("Received Cosmos API response",{status:C.status,headers:C.headers,data:C.data}),k("Initiating asset cleanup",{assetId:R}),await lt.delete(`${Yt}/${R}`,{headers:{Authorization:`Bearer ${l}`}}),k("Asset cleanup completed",{assetId:R});let Q=C.data.choices[0]?.message?.content||"",We={...C.data,prompt_logprobs:null},ue={description:Q,confidence:.92};return k("Processing complete",{responseLength:Q.length,success:!0,assetId:R}),r&&r({text:`Scene Analysis: ${Q}`,success:!0,mediaPath:d,data:{response:Q,analysis:ue,raw:We,assetId:R}}),!0}catch(d){throw k("Failed to get response from NVIDIA NIM",{error:d}),r&&r({text:`Error analyzing media: ${d instanceof Error?d.message:String(d)}`,success:!1,mediaPath:c.mediaFile,data:{error:d instanceof Error?d.message:String(d)}}),new _("API_ERROR","Failed to get response from NVIDIA NIM","HIGH",{originalError:d})}}catch(a){throw k("Failed to execute GET_COSMOS_DESCRIPTION action",{error:a}),new _("NETWORK_ERROR","Failed to execute GET_COSMOS_DESCRIPTION action","HIGH",{originalError:a})}}},Jt=Rn;async function qt(s,e,t){if(e&&e.length>0){let i=e[0];if(!i.url)throw new Error("Invalid media attachment: no URL found");if(t){let o=new H(t),l=T.join("packages","plugin-nvidia-nim","src","assets","deepfake"),c=await o.handleChatUpload(i.url,l);return {mediaFile:T.basename(c),isBase64:false}}return {mediaFile:i.url,isBase64:i.url.startsWith("data:image")}}let n=s.match(/\[IMAGE\]([\s\S]*?)\[\/IMAGE\]/);if(!n)throw new Error("Image file path or data is required");let r=n[1].trim(),a=r.startsWith("data:image");return {mediaFile:r,isBase64:a}}var Pn=U(),Vn=Pn.NVIDIA_GRANULAR_LOG,ce=(s,e)=>{Vn&&(elizaLogger.info(`[DeepFakeDetection] ${s}`,e),console.log(`[DeepFakeDetection] ${s}`,e?JSON.stringify(e,null,2):""));},Fn={name:"GET_DEEP_FAKE",similes:["CHECK_DEEP_FAKE","ANALYZE_DEEP_FAKE","DEEP_FAKE_CONTROL"],description:"Use NVIDIA DeepFake detection model to analyze images for potential manipulation",examples:[[{user:"user",content:{text:`Check if this image is a deepfake please[IMAGE]
test_image.jpg
[/IMAGE]`,mediaPath:"test_image.jpg"}},{user:"assistant",content:{text:"DeepFake Analysis: Image contains 1 face(s). Face #1: 99.82% likely to be a deepfake.",success:true,data:{response:"Detected potential manipulation in the image",analysis:[{index:0,bounding_boxes:[{vertices:[{x:167.92,y:105.52},{x:327.76,y:327.61}],bbox_confidence:.9352,is_deepfake:.9982}],status:"SUCCESS"}]}}}]],validate:async(s,e)=>{if(e.content?.type!=="GET_DEEP_FAKE")return  true;ce("Validating GET_DEEP_FAKE action",{content:e.content});try{if(!e.content.text)throw new _("VALIDATION_FAILED","text content is required","HIGH");return !0}catch(t){return ce("Validation failed",{error:t}),elizaLogger.error("Validation failed for GET_DEEP_FAKE",{error:t instanceof Error?t.message:String(t)}),false}},handler:async(s,e,t,n={},r)=>{ce("Executing GET_DEEPFAKE action");try{let a=e.content;console.log("Debug - Full message content:",{fullContent:e.content,rawText:a?.text,type:e.content?.type,allKeys:Object.keys(e.content||{}),attachments:e.content?.attachments}),console.log("Debug - Message content details:",{hasText:!!a?.text,hasMediaFile:!!a?.mediaFile,hasAttachments:!!e.content?.attachments?.length,textContent:a?.text,mediaFile:a?.mediaFile,contentType:typeof a?.text,attachmentCount:e.content?.attachments?.length||0,firstAttachmentUrl:e.content?.attachments?.[0]?.url,firstAttachmentType:e.content?.attachments?.[0]?.contentType});let i=await J(s);console.log("Debug - Config validated:",{hasApiKey:!!i.NVIDIA_NIM_API_KEY,env:i.NVIDIA_NIM_ENV});let o=W(i.NVIDIA_NIM_ENV);console.log("Debug - Network config:",{hasBaseUrl:!!o?.baseUrl,baseUrl:o?.baseUrl}),console.log("Debug - Raw prompt:",{text:a.text,hasMediaFile:!!a.mediaFile,mediaFile:a.mediaFile,promptLength:a.text?.length,attachments:e.content?.attachments});let l=await qt(a.text,e.content?.attachments,i.NVIDIA_NIM_API_KEY);console.log("Debug - Parsed content:",{hasMediaFile:!!l.mediaFile,mediaPath:l.mediaFile,mediaLength:l.mediaFile?.length,isBase64:l.isBase64});let c,p,d="",h,E;if(l.isBase64){for(console.log("Debug - Using base64 image from chat"),c=l.mediaFile.split("base64,")[1],p=Buffer.from(c,"base64"),h=process.cwd().replace("/agent","");!b.existsSync(T.join(h,"packages"))&&h!==T.parse(h).root;)h=T.dirname(h);E=T.join(h,"packages","plugin-nvidia-nim","src","assets","deepfake");let I=T.join(E,"temp");b.existsSync(I)||b.mkdirSync(I,{recursive:!0}),d=T.join(I,`temp_${Date.now()}.jpg`),b.writeFileSync(d,p);}else {for(h=process.cwd().replace("/agent","");!b.existsSync(T.join(h,"packages"))&&h!==T.parse(h).root;)h=T.dirname(h);console.log("Debug - Workspace detection:",{workspaceRoot:h,hasPackagesDir:b.existsSync(T.join(h,"packages"))}),E=T.join(h,"packages","plugin-nvidia-nim","src","assets","deepfake"),d=T.join(E,l.mediaFile);let I=T.resolve(d);console.log("Debug - File paths:",{workspaceRoot:h,deepfakeDir:E,mediaPath:d,absolutePath:I,cwd:process.cwd(),exists:b.existsSync(d),dirExists:b.existsSync(E)}),b.existsSync(E)||(console.log("Debug - Creating deepfake directory"),b.mkdirSync(E,{recursive:!0}));try{await b.promises.access(d,b.constants.R_OK),console.log("Debug - File is readable at path:",d);let v=await b.promises.stat(d);console.log("Debug - File stats:",{size:v.size,isFile:v.isFile(),permissions:v.mode});}catch(v){console.error("Debug - File access error:",{error:v instanceof Error?v.message:String(v),path:d});}if(!b.existsSync(d)){console.error(`Media file not found: ${d}`);try{let v=await b.promises.readdir(T.dirname(d));console.log("Debug - Directory contents:",{path:T.dirname(d),files:v});}catch(v){console.error("Debug - Failed to read directory:",v);}throw new _("FILE_NOT_FOUND",`Media file not found: ${d}`,"HIGH")}console.log("Debug - Reading file from path"),p=b.readFileSync(d),c=p.toString("base64");}ce("Making request to NVIDIA NIM API",{model:"hive/deepfake-image-detection",hasMediaFile:!0,imageSize:p.length,isBase64Image:l.isBase64});try{let I,v={Authorization:`Bearer ${i.NVIDIA_NIM_API_KEY}`,Accept:"application/json"};if(c.length<18e4)I={input:[`data:image/jpeg;base64,${c}`]},v["Content-Type"]="application/json";else {let $=null,C=d;if(l.isBase64){let ue=T.join(h,"packages","plugin-nvidia-nim","src","assets","deepfake","temp");b.existsSync(ue)||b.mkdirSync(ue,{recursive:!0}),$=T.join(ue,`temp_${Date.now()}_large.jpg`),b.writeFileSync($,p),C=$;}let We=await new H(i.NVIDIA_NIM_API_KEY).uploadAsset(C);$&&b.existsSync($)&&b.unlinkSync($),I={input:[`data:image/jpeg;asset_id,${We.assetId}`]},v["Content-Type"]="application/json",v["NVCF-INPUT-ASSET-REFERENCES"]=We.assetId;}let q="https://ai.api.nvidia.com/v1/cv/hive/deepfake-image-detection";console.log("Debug - Making API request:",{url:q,payloadSize:JSON.stringify(I).length,hasAuth:!!v.Authorization});let{data:Z}=await lt.post(q,I,{headers:v,maxBodyLength:1/0,maxContentLength:1/0});console.log("Debug - API Response received:",{status:"success",dataLength:JSON.stringify(Z).length});let le=Z;ce("Successfully received response from NVIDIA NIM",{response:le});let V=le.data[0];ce("Processing analysis results",{analysis:V});let R="";if(V.image){let $=`df_analysis_${Date.now()}.jpg`;R=T.join(E,$),b.existsSync(T.dirname(R))||b.mkdirSync(T.dirname(R),{recursive:!0});let C=Buffer.from(V.image.split(",")[1],"base64");b.writeFileSync(R,C),ce("Saved processed image",{path:R});}let Ke=V.bounding_boxes.length,de=V.bounding_boxes.map(($,C)=>`Face #${C+1}: ${($.is_deepfake*100).toFixed(2)}% likely to be a deepfake`),je=`DeepFake Analysis: Image contains ${Ke} face(s). ${de.join(". ")}${R?`

Processed image saved to: ${R}`:""}`;return r&&r({text:je,success:!0,mediaPath:d,data:{response:"Analyzed image for potential manipulation",analysis:[V],processedImage:R||null}}),!0}catch(I){throw ce("Failed to get response from NVIDIA NIM",{error:I}),r&&r({text:`Error analyzing image: ${I instanceof Error?I.message:String(I)}`,success:!1,mediaPath:l.mediaFile,data:{error:I instanceof Error?I.message:String(I)}}),new _("API_ERROR","Failed to get response from NVIDIA NIM","HIGH",{originalError:I})}}catch(a){throw ce("Failed to execute GET_DEEP_FAKE action",{error:a}),new _("NETWORK_ERROR","Failed to execute GET_DEEP_FAKE action","HIGH",{originalError:a})}}},Xt=Fn;async function ts(s,e,t){try{if(e&&e.length>0){let i=e[0];if(!i.url)throw new Error("Invalid media attachment: no URL found");if(t){let o=new H(t),l=T.join("packages","plugin-nvidia-nim","src","assets","aiimage"),c=await o.handleChatUpload(i.url,l);return {mediaFile:T.basename(c),isBase64:!1}}return {mediaFile:i.url,isBase64:i.url.startsWith("data:image")}}let n=s.match(/\[IMAGE\]([\s\S]*?)\[\/IMAGE\]/);if(!n)throw new Error("Image file path or data is required");let r=n[1].trim(),a=r.startsWith("data:image");return {mediaFile:r,isBase64:a}}catch(n){throw n instanceof _?n:new _("PARSE_ERROR","Failed to parse AI image prompt","HIGH",{originalError:n})}}var jn=U(),Un=jn.NVIDIA_GRANULAR_LOG,ye=(s,e)=>{Un&&(elizaLogger.info(`[AIImageDetection] ${s}`,e),console.log(`[AIImageDetection] ${s}`,e?JSON.stringify(e,null,2):""));},$n={name:"GET_AI_IMAGE",similes:["CHECK_AI_IMAGE","ANALYZE_AI_IMAGE","AI_IMAGE_CONTROL"],description:"Use NVIDIA AI Image detection model to analyze if images were generated by AI",examples:[[{user:"user",content:{text:`Check if this image is AI generated [IMAGE]
test_ai.jpg
[/IMAGE]  `,mediaPath:"test_ai.jpg"}},{user:"assistant",content:{text:"AI Image Analysis: Image is 99.94% likely to be AI-generated. Most likely source: Stable Diffusion XL (88.75% confidence).",success:true,data:{response:"Detected AI-generated image",analysis:[{index:0,is_ai_generated:.9994,possible_sources:{stablediffusionxl:.8875,midjourney:.0136,dalle:.0518},status:"SUCCESS"}]}}}]],validate:async(s,e)=>{if(e.content?.type!=="GET_AI_IMAGE")return  true;ye("Validating GET_AI_IMAGE action",{content:e.content});try{if(!e.content.text)throw new _("VALIDATION_FAILED","text content is required","HIGH");return !0}catch(t){return ye("Validation failed",{error:t}),elizaLogger.error("Validation failed for GET_AI_IMAGE",{error:t instanceof Error?t.message:String(t)}),false}},handler:async(s,e,t,n={},r)=>{ye("Executing GET_AI_IMAGE action");try{let a=e.content;console.log("Debug - Full message content:",{fullContent:e.content,rawText:a?.text,type:e.content?.type,allKeys:Object.keys(e.content||{}),attachments:e.content?.attachments}),console.log("Debug - Message content details:",{hasText:!!a?.text,hasMediaFile:!!a?.mediaFile,hasAttachments:!!e.content?.attachments?.length,textContent:a?.text,mediaFile:a?.mediaFile,contentType:typeof a?.text,attachmentCount:e.content?.attachments?.length||0,firstAttachmentUrl:e.content?.attachments?.[0]?.url,firstAttachmentType:e.content?.attachments?.[0]?.contentType});let i=await J(s);console.log("Debug - Config validated:",{hasApiKey:!!i.NVIDIA_NIM_API_KEY,env:i.NVIDIA_NIM_ENV});let o=W(i.NVIDIA_NIM_ENV);console.log("Debug - Network config:",{hasBaseUrl:!!o?.baseUrl,baseUrl:o?.baseUrl}),console.log("Debug - Raw prompt:",{text:a.text,hasMediaFile:!!a.mediaFile,mediaFile:a.mediaFile,promptLength:a.text?.length,attachments:e.content?.attachments});let l=await ts(a.text,e.content?.attachments,i.NVIDIA_NIM_API_KEY);console.log("Debug - Parsed content:",{hasMediaFile:!!l.mediaFile,mediaPath:l.mediaFile,mediaLength:l.mediaFile?.length,isBase64:l.isBase64});let c,p,d="",h,E;if(l.isBase64){for(console.log("Debug - Using base64 image from chat"),c=l.mediaFile.split("base64,")[1],p=Buffer.from(c,"base64"),h=process.cwd().replace("/agent","");!b.existsSync(T.join(h,"packages"))&&h!==T.parse(h).root;)h=T.dirname(h);E=T.join(h,"packages","plugin-nvidia-nim","src","assets","aiimage");let I=T.join(E,"temp");b.existsSync(I)||b.mkdirSync(I,{recursive:!0}),d=T.join(I,`temp_${Date.now()}.jpg`),b.writeFileSync(d,p);}else {for(h=process.cwd().replace("/agent","");!b.existsSync(T.join(h,"packages"))&&h!==T.parse(h).root;)h=T.dirname(h);console.log("Debug - Workspace detection:",{workspaceRoot:h,hasPackagesDir:b.existsSync(T.join(h,"packages"))}),E=T.join(h,"packages","plugin-nvidia-nim","src","assets","aiimage"),d=T.join(E,l.mediaFile);let I=T.resolve(d);console.log("Debug - File paths:",{workspaceRoot:h,aiImageDir:E,mediaPath:d,absolutePath:I,cwd:process.cwd(),exists:b.existsSync(d),dirExists:b.existsSync(E)}),b.existsSync(E)||(console.log("Debug - Creating aiimage directory"),b.mkdirSync(E,{recursive:!0}));try{await b.promises.access(d,b.constants.R_OK),console.log("Debug - File is readable at path:",d);let v=await b.promises.stat(d);console.log("Debug - File stats:",{size:v.size,isFile:v.isFile(),permissions:v.mode});}catch(v){console.error("Debug - File access error:",{error:v instanceof Error?v.message:String(v),path:d});}if(!b.existsSync(d)){console.error(`Media file not found: ${d}`);try{let v=await b.promises.readdir(T.dirname(d));console.log("Debug - Directory contents:",{path:T.dirname(d),files:v});}catch(v){console.error("Debug - Failed to read directory:",v);}throw new _("FILE_NOT_FOUND",`Media file not found: ${d}`,"HIGH")}console.log("Debug - Reading file from path"),p=b.readFileSync(d),c=p.toString("base64");}ye("Making request to NVIDIA NIM API",{model:"hive/ai-generated-image-detection",hasMediaFile:!0,imageSize:p.length,isBase64Image:l.isBase64});try{let I,v={Authorization:`Bearer ${i.NVIDIA_NIM_API_KEY}`,Accept:"application/json"};if(c.length<18e4)I={input:[`data:image/jpeg;base64,${c}`]},v["Content-Type"]="application/json";else {let C=null,Q=d;if(l.isBase64){let te=T.join(h,"packages","plugin-nvidia-nim","src","assets","aiimage","temp");b.existsSync(te)||b.mkdirSync(te,{recursive:!0}),C=T.join(te,`temp_${Date.now()}_large.jpg`),b.writeFileSync(C,p),Q=C;}let ue=await new H(i.NVIDIA_NIM_API_KEY).uploadAsset(Q);C&&b.existsSync(C)&&b.unlinkSync(C),I={input:[`data:image/jpeg;asset_id,${ue.assetId}`]},v["Content-Type"]="application/json",v["NVCF-INPUT-ASSET-REFERENCES"]=ue.assetId;}let q="https://ai.api.nvidia.com/v1/cv/hive/ai-generated-image-detection";console.log("Debug - Making API request:",{url:q,payloadSize:JSON.stringify(I).length,hasAuth:!!v.Authorization});let{data:Z}=await lt.post(q,I,{headers:v,maxBodyLength:1/0,maxContentLength:1/0});console.log("Debug - API Response received:",{status:"success",dataLength:JSON.stringify(Z).length});let le=Z;ye("Successfully received response from NVIDIA NIM",{response:le});let V=le.data[0];ye("Processing analysis results",{analysis:V});let R=(V.is_ai_generated*100).toFixed(2),de=Object.entries(V.possible_sources).reduce((C,Q)=>Q[1]>C[1]?Q:C),je=(de[1]*100).toFixed(2),Je=`AI Image Analysis: Image is ${R}% likely to be AI-generated. ${de[0]!=="none"?`Most likely source: ${de[0]} (${je}% confidence).`:"No specific AI source identified."}`;return r&&r({text:Je,success:!0,mediaPath:d,data:{response:"Analyzed image for AI generation",analysis:[V]}}),!0}catch(I){throw ye("Failed to get response from NVIDIA NIM",{error:I}),r&&r({text:`Error analyzing image: ${I instanceof Error?I.message:String(I)}`,success:!1,mediaPath:d,data:{error:I instanceof Error?I.message:String(I)}}),new _("API_ERROR","Failed to get response from NVIDIA NIM","HIGH",{originalError:I})}}catch(a){throw ye("Failed to execute GET_AI_IMAGE action",{error:a}),new _("NETWORK_ERROR","Failed to execute GET_AI_IMAGE action","HIGH",{originalError:a})}}},ns=$n;var as=Gn({text:w.cyan("Initializing NVIDIA NIM Plugin..."),spinner:"dots12",color:"cyan"}).start(),yt=[Mt,Ft,Ut,Jt,Xt,ns],Hn=U().NVIDIA_NIM_SPASH;if(Hn){console.log(`
`+w.cyan("\u250C\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510")),console.log(w.cyan("\u2502")+w.yellow.bold("          NVIDIA NIM PLUGIN             ")+w.cyan(" \u2502")),console.log(w.cyan("\u251C\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524")),console.log(w.cyan("\u2502")+w.white("  Initializing NVIDIA NIM Services...    ")+w.cyan("\u2502")),console.log(w.cyan("\u2502")+w.white("  Version: 1.0.0                        ")+w.cyan("\u2502")),console.log(w.cyan("\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518")),as.succeed(w.green("NVIDIA NIM Plugin initialized successfully!"));let s=new rs({head:[w.cyan("Action"),w.cyan("H"),w.cyan("V"),w.cyan("E"),w.cyan("Similes")],style:{head:[],border:["cyan"]}});yt.forEach(t=>{s.push([w.white(t.name),typeof t.handler=="function"?w.green("\u2713"):w.red("\u2717"),typeof t.validate=="function"?w.green("\u2713"):w.red("\u2717"),t.examples?.length>0?w.green("\u2713"):w.red("\u2717"),w.gray(t.similes?.join(", ")||"none")]);}),console.log(`
`+s.toString());let e=new rs({style:{border:["cyan"]}});e.push([w.cyan("Plugin Status")],[w.white("Name    : ")+w.yellow("nvidia-nim")],[w.white("Actions : ")+w.green(yt.length.toString())],[w.white("Status  : ")+w.green("Loaded & Ready")]),console.log(`
`+e.toString()+`
`);}else as.stop();var Zn={name:"nvidia-nim",description:"NVIDIA NIM Plugin for AI Foundation Models integration",actions:yt,evaluators:[]};var Sa=Zn;export{Sa as default,Zn as nvidiaNimPlugin};//# sourceMappingURL=index.js.map
//# sourceMappingURL=index.js.map